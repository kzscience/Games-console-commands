// All console commands for Counter-Strike: Global Offensive

+alt1
+alt2
+attack
+attack2
+back
+break
+camdistance
+camin
+cammousemove
+camout
+campitchdown
+campitchup
+camyawleft
+camyawright
+commandermousemove
+csm_rot_x_neg
+csm_rot_x_plus
+csm_rot_y_neg
+csm_rot_y_plus
+duck
+forward
+graph
+grenade1
+grenade2
+jlook
+jump
+klook
+left
+lookdown
+lookspin
+lookup
+mat_texture_list
+movedown
+moveleft
+moveright
+moveup
+posedebug // Turn on pose debugger or add ents to pose debugger UI
+reload
+right
+score
+showbudget
+showbudget_texture
+showbudget_texture_global
+showscores
+showvprof
+speed
+strafe
+use
+vgui_drawtree
+voicerecord
+walk
+zoom
+zoom_in
+zoom_out
-alt1
-alt2
-attack
-attack2
-back
-break
-camdistance
-camin
-cammousemove
-camout
-campitchdown
-campitchup
-camyawleft
-camyawright
-commandermousemove
-csm_rot_x_neg
-csm_rot_x_plus
-csm_rot_y_neg
-csm_rot_y_plus
-duck
-forward
-graph
-grenade1
-grenade2
-jlook
-jump
-klook
-left
-lookdown
-lookspin
-lookup
-mat_texture_list
-movedown
-moveleft
-moveright
-moveup
-posedebug // Turn off pose debugger or hide ents from pose debugger UI
-reload
-right
-score
-showbudget
-showbudget_texture
-showbudget_texture_global
-showscores
-showvprof
-speed
-strafe
-use
-vgui_drawtree
-voicerecord
-walk
-zoom
-zoom_in
-zoom_out
achievement_debug "0" // Turn on achievement debug msgs.
achievement_disable "0" // Turn off achievements.
addip // Add an IP address to the ban list.
adsp_debug "0"
adsp_reset_nodes
ainet_generate_report // Generate a report to the console.
ainet_generate_report_only // Generate a report to the console.
air_density // Changes the density of air for drag computations.
ai_clear_bad_links // Clears bits set on nav links indicating link is unusable
ai_debug_los "0" // itl
ai_debug_node_connect // Debug the attempted connection between two nodes
ai_debug_shoot_positions "0"
ai_disable // Bi-passes all AI logic routines and puts all NPCs into their idle animations. Can be used to get NPCs out of your way and to t
ai_drawbattlelines "0"
ai_drop_hint // Drop an ai_hint at the players current eye position.
ai_dump_hints
ai_hull // Controls which connections are shown when ai_show_hull or ai_show_connect commands are used Arguments: NPC name or classname,
ai_next_hull // Cycles through the various hull sizes. Currently selected hull size is written to the screen. Controls which connections are
ai_nodes // Toggles node display. First call displays the nodes for the given network as green objects. Second call displays the nodes a
ai_report_task_timings_on_limit "0"
ai_resume // If NPC is stepping through tasks (see ai_step ) will resume normal processing.
ai_setenabled // Like ai_disable but you manually specify the state (with a 0 or 1) instead of toggling it.
ai_set_move_height_epsilon // Set how high AI bumps up ground walkers when checking steps
ai_show_connect // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
ai_show_connect_crawl // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
ai_show_connect_fly // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
ai_show_connect_jump // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
ai_show_graph_connect // Toggles graph connection display for the node that the player is looking at. Nodes that are connected to the selected node by
ai_show_grid // Draw a grid on the floor where looking.
ai_show_hints // Displays all hints as small boxes Blue - hint is available for use Red - hint is currently being used by an NPC Orange -
ai_show_hull // Displays the allowed hulls between each node for the currently selected hull type. Hulls are color code as follows: Green -
ai_show_node // Highlight the specified node
ai_show_visibility // Toggles visibility display for the node that the player is looking at. Nodes that are visible from the selected node will be d
ai_step // use ai_step again. To resume processing no
ai_test_los // Test AI LOS from the players POV
ai_think_limit_label "0"
ai_vehicle_avoidance "1"
alias // Alias a command.
ammo_338mag_max "30"
ammo_357sig_max "52"
ammo_357sig_min_max "12"
ammo_357sig_small_max "24"
ammo_45acp_max "100"
ammo_50AE_max "35"
ammo_556mm_box_max "200"
ammo_556mm_max "90"
ammo_556mm_small_max "40"
ammo_57mm_max "100"
ammo_762mm_max "90"
ammo_9mm_max "120"
ammo_buckshot_max "32"
ammo_grenade_limit_default "1"
ammo_grenade_limit_flashbang "1"
ammo_grenade_limit_total "3"
askconnect_accept // Accept a redirect request by the server.
asw_engine_finished_building_map // Notify engine that weve finished building a map
async_resume
async_suspend
audit_save_in_memory // Audit the memory usage and files in the save-to-memory system
autobuy // Attempt to purchase items with the order listed in cl_autobuy
autosave // Autosave
autosavedangerous // AutoSaveDangerous
autosavedangerousissafe
banid // Add a user ID to the ban list.
banip // Add an IP address to the ban list.
benchframe // Takes a snapshot of a particular frame in a time demo.
bench_end // Ends gathering of info.
bench_showstatsdialog // Shows a dialog displaying the most recent benchmark results.
bench_start // Starts gathering of info. Arguments: filename to write results into
bench_upload // Uploads most recent benchmark stats to the Valve servers.
bind // Bind a key.
BindToggle // Performs a bind <key> increment var <cvar> 0 1 1
bind_osx // Bind a key for OSX only.
blackbox_dump // Dump the contents of the blackbox
blackbox_record // Record an entry into the blackbox
bot_add // bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.
bot_add_ct // bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.
bot_add_t // bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.
bot_all_weapons // Allows the bots to use all weapons
bot_autodifficulty_threshold_high "5" // Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty
bot_autodifficulty_threshold_low "-2" // Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty
bot_chatter "0" // or normal.
bot_crouch "0"
bot_debug "0" // For internal testing purposes.
bot_debug_target "0" // For internal testing purposes.
bot_defer_to_human_goals "0" // the bots will not do the scenario tasks.
bot_defer_to_human_items "1" // the bots will not get scenario items.
bot_difficulty "1" // 3=expert.
bot_dont_shoot "0" // bots will not fire weapons (for debugging).
bot_freeze "0"
bot_goto_mark // Sends a bot to the marked nav area (useful for testing navigation meshes)
bot_goto_selected // Sends a bot to the selected nav area (useful for testing navigation meshes)
bot_join_after_player "1" // bots wait until a player joins before entering the game.
bot_join_team "0" // or CT.
bot_kick // matching the given criteria.
bot_kill // matching the given criteria.
bot_knives_only // Restricts the bots to only using knives
bot_loadout "0" // bots are given these items at round start
bot_max_vision_distance_override "-1" // Max distance bots can see targets.
bot_mimic "0"
bot_mimic_yaw_offset "180"
bot_pistols_only // Restricts the bots to only using pistols
bot_place // bot_place - Places a bot from the map at where the local player is pointing.
bot_quota "10" // Determines the total number of bots in the game.
bot_quota_mode "0" // Determines the type of quota. Allowed values: normal, fill, and match. If fill, the server will adjust bots to keep N p
bot_randombuy "0" // should bots ignore their prefered weapons and just buy weapons at random?
bot_show_battlefront "0" // Show areas where rushing players will initially meet.
bot_show_nav "0" // For internal testing purposes.
bot_show_occupy_time "0" // Show when each nav area can first be reached by each team.
bot_snipers_only // Restricts the bots to only using sniper rifles
bot_stop "0" // immediately stops all bot processing.
bot_traceview "0" // For internal testing purposes.
bot_zombie "0" // bots will stay in idle mode and not attack.
box // Draw a debug box.
buddha // Toggle. Player takes damage but wont die. (Shows red cross when health is zero)
budget_averages_window "30" // number of frames to look at when figuring out average frametimes
budget_background_alpha "128" // how translucent the budget panel is
budget_bargraph_background_alpha "128" // how translucent the budget panel is
budget_bargraph_range_ms "16" // budget bargraph range in milliseconds
budget_history_numsamplesvisible "100" // number of samples to draw in the budget history window. The lower the better as far as rendering overhead of the budget panel
budget_history_range_ms "66" // budget history range in milliseconds
budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
budget_panel_height "384" // height in pixels of the budget panel
budget_panel_width "512" // width in pixels of the budget panel
budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
budget_panel_y "50" // number of pixels from the top side of the game screen to draw the budget panel
budget_peaks_window "30" // number of frames to look at when figuring out peak frametimes
budget_show_averages "0" // enable/disable averages in the budget panel
budget_show_history "1" // turn history graph off and on. . good to turn off on low end
budget_show_peaks "1" // enable/disable peaks in the budget panel
budget_toggle_group // Turn a budget group on/off
bug // Show the bug reporting UI.
bugreporter_uploadasync "0" // Upload attachments asynchronously
bugreporter_username "0" // Username to use for bugreporter
bug_swap // Automatically swaps the current weapon for the bug bait and back again.
buildcubemaps // Rebuild cubemaps.
building_cubemaps "0" // Indicates were building cubemaps
buildmodelforworld // buildmodelforworld
buymenu // Show or hide main buy menu
buyrandom // Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.
buy_stamps // Temporary solution for Pinion to kick back to community map makers.
cache_print // cache_print [section] Print out contents of cache memory.
cache_print_lru // cache_print_lru [section] Print out contents of cache memory.
cache_print_summary // cache_print_summary [section] Print out a summary contents of cache memory.
callvote // Start a vote on an issue.
cam_collision "1" // an attempt is made to keep the camera from passing though walls.
cam_command // Tells camera to change modes
cam_idealdelta "4" // Controls the speed when matching offset to ideal angles in thirdperson view
cam_idealdist "150"
cam_idealdistright "0"
cam_idealdistup "0"
cam_ideallag "4" // Amount of lag used when matching offset to ideal angles in thirdperson view
cam_idealpitch "0"
cam_idealyaw "0"
cam_showangles "0" // print viewangles/idealangles/cameraoffsets to the console.
cam_snapto "0"
cancelselect
cash_player_bomb_defused "300"
cash_player_bomb_planted "300"
cash_player_damage_hostage "-30"
cash_player_get_killed "0"
cash_player_interact_with_hostage "150"
cash_player_killed_enemy_default "300"
cash_player_killed_enemy_factor "1"
cash_player_killed_hostage "-1000"
cash_player_killed_teammate "-300"
cash_player_rescued_hostage "1000"
cash_player_respawn_amount "0"
cash_team_elimination_bomb_map "3250"
cash_team_elimination_hostage_map_ct "2000"
cash_team_elimination_hostage_map_t "1000"
cash_team_hostage_alive "0"
cash_team_hostage_interaction "500"
cash_team_loser_bonus "1400"
cash_team_loser_bonus_consecutive_rounds "500"
cash_team_planted_bomb_but_defused "800"
cash_team_rescued_hostage "0"
cash_team_terrorist_win_bomb "3500"
cash_team_win_by_defusing_bomb "3250"
cash_team_win_by_hostage_rescue "3500"
cash_team_win_by_time_running_out_bomb "3250"
cash_team_win_by_time_running_out_hostage "3250"
cast_hull // Tests hull collision detection
cast_ray // Tests collision detection
cc_emit // Emits a closed caption
cc_findsound // Searches for soundname which emits specified text.
cc_flush // Flushes asyncd captions.
cc_lang "0" // Current close caption language (emtpy = use game UI language)
cc_linger_time "1" // Close caption linger time.
cc_predisplay_time "0" // Close caption delay before showing caption.
cc_random // Emits a random caption
cc_showblocks // Toggles showing which blocks are pending/loaded async.
cc_subtitles "0" // wont help hearing impaired players).
centerview
changelevel // Change server to the specified map
changelevel2 // Transition to the specified map in single player
chet_debug_idle "0" // many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info
ch_createairboat // Spawn airboat in front of the player.
ch_createjeep // Spawn jeep in front of the player.
clear // Clear all console output.
clear_anim_cache // freeing the memory (until the next time a streaming animblock is requested).
clear_debug_overlays // clears debug overlays
clientport "27005" // Host game client port
closecaption "0" // Enable close captioning.
closeonbuy "0" // Set non-zero to close the buy menu after buying something
cl_allowdownload "1" // Client downloads customization files
cl_allowupload "1" // Client uploads customization files
cl_animationinfo // Hud element to examine.
cl_autobuy "0" // The order in which autobuy will attempt to purchase items
cl_autohelp "0" // Auto-help
cl_autowepswitch "1" // Automatically switch to picked up weapons (if more powerful)
cl_backspeed "450"
cl_bobamt_lat "0" // The amount the viewmodel moves side to side when running
cl_bobamt_vert "0" // The amount the viewmodel moves up and down when running
cl_bobcycle "0" // the frequency at which the viewmodel bobs.
cl_bobup "0"
cl_bob_lower_amt "21" // The amount the viewmodel lowers when running
cl_bob_version "0"
cl_brushfastpath "1"
cl_buy_favorite // Purchase a favorite weapon/equipment loadout
cl_buy_favorite_nowarn "0" // Skips the error prompt when saving an invalid buy favorite
cl_buy_favorite_quiet "0" // Skips the prompt when saving a buy favorite in the buy menu
cl_buy_favorite_reset // Reset favorite loadouts to the default
cl_buy_favorite_set // Saves the current loadout as a favorite
cl_camera_follow_bone_index "-2" // Index of the bone to follow. -2 == disabled. -1 == root bone. 0+ is bone index.
cl_chatfilters "63" // Stores the chat filter settings
cl_clearhinthistory // Clear memory of client side hints displayed to the player.
cl_clockdrift_max_ms "150" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
cl_clockdrift_max_ms_threadmode "0" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
cl_clock_correction "1" // Enable/disable clock correction on the client.
cl_clock_correction_adjustment_max_amount "200" // Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount
cl_clock_correction_adjustment_max_offset "90" // it moves towards apply
cl_clock_correction_adjustment_min_offset "10" // then no clock correction is applied.
cl_clock_correction_force_server_tick "999" // Force clock correction to match the server tick + this offset (-999 disables it).
cl_clock_showdebuginfo "0" // Show debugging info about the clock drift.
cl_cmdrate "128" // Max number of command packets sent to server per second
cl_color "0" // Preferred teammate color
cl_crosshairalpha "200"
cl_crosshaircolor "1" // Set crosshair color as defined in game_options.consoles.txt
cl_crosshaircolor_b "50"
cl_crosshaircolor_g "250"
cl_crosshaircolor_r "50"
cl_crosshairdot "0"
cl_crosshairgap "0"
cl_crosshairgap_useweaponvalue "0" // the gap will update dynamically based on which weapon is currently equipped
cl_crosshairscale "0" // Crosshair scaling factor (deprecated)
cl_crosshairsize "5"
cl_crosshairstyle "1" // 3 = ACCURATE DYN
cl_crosshairthickness "0"
cl_crosshairusealpha "1"
cl_crosshair_drawoutline "0" // Draws a black outline around the crosshair for better visibility
cl_crosshair_dynamic_maxdist_splitratio "0" // this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_
cl_crosshair_dynamic_splitalpha_innermod "1" // this is the alpha modification that will be used for the INNER crosshair pips once theyve split.
cl_crosshair_dynamic_splitalpha_outermod "0" // this is the alpha modification that will be used for the OUTER crosshair pips once theyve split.
cl_crosshair_dynamic_splitdist "7" // this is the distance that the crosshair pips will split into 2. (default is 7)
cl_crosshair_outlinethickness "1" // Set how thick you want your crosshair outline to draw (0.1-3)
cl_csm_server_status // Usage: cl_csm_server_status
cl_csm_status // Usage: cl_csm_status
cl_cs_dump_econ_item_stringtable // cl_cs_dump_econ_item_stringtable
cl_custommaterial_debug_graph "0"
cl_debugrumble "0" // Turn on rumble debugging spew
cl_debug_ugc_downloads "0"
cl_decryptdata_key "0" // Key to decrypt encrypted GOTV messages
cl_decryptdata_key_pub "0" // Key to decrypt public encrypted GOTV messages
cl_detail_avoid_force "0" // percentage of the width of the detail sprite )
cl_detail_avoid_radius "64" // radius around detail sprite to avoid players
cl_detail_avoid_recover_speed "0" // how fast to recover position after avoiding players
cl_detail_max_sway "5" // Amplitude of the detail prop sway
cl_detail_multiplier "1" // extra details to create
cl_disablefreezecam "0" // Turn on/off freezecam on client
cl_disablehtmlmotd "0" // Disable HTML motds.
cl_disable_ragdolls "0"
cl_dm_buyrandomweapons "1" // they will receive the
cl_downloadfilter "0" // nosounds)
cl_download_demoplayer "1" // 2:all)
cl_drawhud "1" // Enable the rendering of the hud
cl_drawleaf "-1"
cl_drawmaterial "0" // Draw a particular material over the frame
cl_drawshadowtexture "0"
cl_draw_only_deathnotices "0" // For drawing only the crosshair and death notices (used for moviemaking)
cl_dumpplayer // Dumps info about a player
cl_dumpsplithacks // Dump split screen workarounds.
cl_dump_particle_stats // dump particle profiling info to particle_profile.csv
cl_entityreport "0" // draw entity states to console
cl_ent_absbox // Displays the clients absbox for the entity under the crosshair.
cl_ent_bbox // Displays the clients bounding box for the entity under the crosshair.
cl_ent_rbox // Displays the clients render box for the entity under the crosshair.
cl_extrapolate "1" // Enable/disable extrapolation if interpolation history runs out.
cl_extrapolate_amount "0" // Set how many seconds the client will extrapolate entities for.
cl_fastdetailsprites "1" // whether to use new detail sprite system
cl_find_ent // Find and list all client entities with classnames that contain the specified substring. Format: cl_find_ent <substring>
cl_find_ent_index // Display data for clientside entity matching specified index. Format: cl_find_ent_index <index>
cl_fixedcrosshairgap "3" // How big to make the gap between the pips in the fixed crosshair
cl_flushentitypacket "0" // For debugging. Force the engine to flush an entity packet.
cl_forcepreload "0" // Whether we should force preloading.
cl_forwardspeed "450"
cl_freezecameffects_showholiday "0" // Happy holidays from the CS:GO team and Valve!
cl_freezecampanel_position_dynamic "1" // Turn on/off freezecams kill panel dynamic Y movement
cl_fullupdate // Forces the server to send a full update packet
cl_game_mode_convars // Display the values of the convars for the current game_mode.
cl_hideserverip "0" // server IPs will be hidden in the console (except when you type status)
cl_hud_background_alpha "0"
cl_hud_bomb_under_radar "1"
cl_hud_color "0" // 5 = white.
cl_hud_healthammo_style "0"
cl_hud_playercount_pos "0" // 1 = bottom
cl_hud_playercount_showcount "0" // 1 = just show count number (no avatars)
cl_hud_radar_scale "1"
cl_idealpitchscale "0"
cl_ignorepackets "0" // Force client to ignore packets (for debugging).
cl_interp "0" // Sets the interpolation amount (bounded on low side by server interp ratio settings).
cl_interpolate "1" // Enables or disables interpolation on listen servers or during demo playback
cl_interp_ratio "2" // Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate).
cl_inventory_saved_filter "0"
cl_inventory_saved_sort "0"
cl_inv_showdividerline "0" // will show a divider line above the grenades in the inventory panel.
cl_jiggle_bone_debug "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_debug_pitch_constraints "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_debug_yaw_constraints "0" // Display physics-based jiggle bone debugging information
cl_jiggle_bone_invert "0"
cl_join_advertise "1" // 0: no
cl_lagcompensation "1" // Perform server side lag compensation of weapon firing events.
cl_leafsystemvis "0"
cl_leveloverview "0"
cl_leveloverviewmarker "0"
cl_loadout_colorweaponnames "0" // the weapon names are colored in the weapon loadout to match their rarity.
cl_logofile "0" // Spraypoint logo decal.
cl_mainmenu_show_datagraph "0"
cl_maxrenderable_dist "3000" // Max distance from the camera at which things will be rendered
cl_minimal_rtt_shadows "1"
cl_modemanager_reload // Reloads the panel metaclasses for vgui screens.
cl_mouseenable "0"
cl_mouselook "1" // 0 for keyboard look. Cannot be set while connected to a server.
cl_observercrosshair "1"
cl_obs_interp_enable "1" // Enables interpolation between observer targets
cl_operation_premium_reminder_op05 "0"
cl_overdraw_test "0"
cl_panelanimation // Shows panel animation variables: <panelname | blank for all panels>.
cl_particles_dumplist // optional name substring.
cl_particles_dump_effects
cl_particles_show_bbox "0"
cl_particles_show_controlpoints "0"
cl_particle_retire_cost "0"
cl_pclass "0" // Dump entity by prediction classname.
cl_pdump "-1" // Dump info about this entity to screen.
cl_phys_show_active "0"
cl_phys_timescale "1" // Sets the scale of time for client-side physics (ragdolls)
cl_pitchdown "89"
cl_pitchup "89"
cl_portal_use_new_dissolve "1" // Use new dissolve effect
cl_precacheinfo // Show precache info (client).
cl_predict "1" // Perform client side prediction.
cl_predictioncopy_describe // Describe datamap_t for entindex
cl_predictionlist "0" // Show which entities are predicting
cl_predictweapons "1" // Perform client side prediction of weapon effects.
cl_pred_track // for field fieldname.
cl_radar_always_centered "1" // even at map extents.
cl_radar_icon_scale_min "0" // Sets the minimum icon scale. Valid values are 0.4 to 1.0.
cl_radar_rotate "1" // 1
cl_radar_scale "0" // Sets the radar scale. Valid values are 0.25 to 1.0.
cl_radar_square_with_scoreboard "1" // the radar will toggle to square when the scoreboard is visible.
cl_ragdoll_gravity "600" // Sets the gravity client-side ragdolls
cl_rebuy "0" // The order in which rebuy will attempt to repurchase items
cl_reloadpostprocessparams
cl_removedecals // Remove the decals from the entity under the crosshair.
cl_remove_all_workshop_maps // Removes all maps from the workshop directory.
cl_remove_old_ugc_downloads "1"
cl_report_soundpatch // reports client-side sound patch count
cl_resend "6" // Delay in seconds before the client will resend the connect attempt
cl_resend_timeout "60" // Total time allowed for the client to resend the connect attempt
cl_righthand "1" // Use right-handed view models.
cl_rumblescale "1" // Scale sensitivity of rumble effects (0 to 1.0)
cl_saveweaponcustomtextures // Save custom textures of current weapon.
cl_scalecrosshair "1" // Enable crosshair scaling (deprecated)
cl_scoreboard_mouse_enable_binding "0" // Name of the binding to enable mouse selection in the scoreboard
cl_shadowtextureoverlaysize "256"
cl_showanimstate_activities "0" // Show activities in the (client) animation state display.
cl_showents // Dump entity list to console.
cl_showerror "0" // 2 for above plus detailed field deltas.
cl_showevents "0" // Print event firing info in the console
cl_showfps "0" // 5 = Thread and wait times +10 = detailed )
cl_showhelp "1" // Set to 0 to not show on-screen help
cl_showloadout "1" // Toggles display of current loadout.
cl_showpluginmessages "1" // Allow plugins to display messages to you
cl_showpos "0" // Draw current position at top of screen
cl_show_clan_in_death_notice "1" // the clan name will show next to player names in the death notices.
cl_sidespeed "450"
cl_skipfastpath "0" // Set to 1 to stop all models that go through the model fast path from rendering
cl_skipslowpath "0" // Set to 1 to skip any models that dont go through the model fast path
cl_sos_test_get_opvar
cl_sos_test_set_opvar
cl_soundemitter_flush // Flushes the sounds.txt system (server only)
cl_soundemitter_reload // Flushes the sounds.txt system
cl_soundfile "0" // Jingle sound file.
cl_soundscape_flush // Flushes the client side soundscapes
cl_soundscape_printdebuginfo // print soundscapes
cl_spec_mode "5" // Saves the last viewed spectator mode for use next time we start to spectate
cl_spec_show_bindings "1" // Toggle the visibility of the spectator bindings.
cl_spec_stats "1"
cl_sporeclipdistance "512"
cl_ss_origin // print origin in script format
cl_steamscreenshots // Enable/disable saving screenshots to Steam
cl_sunlight_ortho_size "0" // Set to values greater than 0 for ortho view render projections.
cl_sun_decay_rate "0"
cl_teamid_overhead "1" // 1 = on
cl_teamid_overhead_maxdist "3000" // max distance at which the overhead team id icons will show
cl_teamid_overhead_maxdist_spec "2000" // max distance at which the overhead team id icons will show when a spectator
cl_teamid_overhead_name_alpha "240" // The max alpha the overhead ID names will draw as.
cl_teamid_overhead_name_fadetime "0" // How long it takes for the overhad name to fade out once your crosshair has left the target.
cl_teammate_colors_show "1" // 2 = show colors and letters
cl_timeout "30" // the client will disconnect itself
cl_tree_sway_dir // sets tree sway wind direction and strength
cl_updaterate "64" // Number of packets per second of updates you are requesting from the server
cl_updatevisibility // Updates visibility bits.
cl_upspeed "320"
cl_use_new_headbob "1"
cl_use_opens_buy_menu "1" // Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the buy key).
cl_view // Set the view entity index.
cl_viewmodel_shift_left_amt "1" // The amount the viewmodel shifts to the left when shooting accuracy increases.
cl_viewmodel_shift_right_amt "0" // The amount the viewmodel shifts to the right when shooting accuracy decreases.
cl_weapon_debug_print_accuracy "0"
cl_winddir "0" // Weather effects wind direction angle
cl_windspeed "0" // Weather effects wind speed scalar
cl_wpn_sway_scale "1"
cmd // Forward command to server.
cmd1 // sets userinfo string for split screen player in slot 1
cmd2 // sets userinfo string for split screen player in slot 2
cmd3 // sets userinfo string for split screen player in slot 3
cmd4 // sets userinfo string for split screen player in slot 4
collision_test // Tests collision system
colorcorrectionui // Show/hide the color correction tools UI.
commentary_cvarsnotchanging
commentary_finishnode
commentary_firstrun "0"
commentary_showmodelviewer // Display the commentary model viewer. Usage: commentary_showmodelviewer <model name> <optional attached model name>
commentary_testfirstrun
computer_name // Spew computer name
condump // dump the text currently in the console to condumpXX.log
connect // Connect to specified server.
con_enable "0" // Allows the console to be activated.
con_filter_enable "0" // 2 displays filtered text brighter than ot
con_filter_text "0" // Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.
con_filter_text_out "0" // Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.
con_logfile "0" // Console output gets written to this file
con_min_severity // LS_ERROR=3.
cpu_frequency_monitoring "0" // Set CPU frequency monitoring interval in seconds. Zero means disabled.
crash // Cause the engine to crash (Debug!!)
CreatePredictionError // Create a prediction error
create_flashlight
creditsdone
crosshair "1"
csgo_download_match // Downloads a match via serial code and starts playback
cs_enable_player_physics_box "0"
cs_hostage_near_rescue_music_distance "2000"
cs_make_vip // Marks a player as the VIP
cs_ShowStateTransitions "-2" // cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.
CS_WarnFriendlyDamageInterval "3" // Defines how frequently the server notifies clients that a player damaged a friend
cursortimeout "60" // Seconds before mouse cursor hides itself due to inactivity
custom_bot_difficulty "0" // Bot difficulty for offline play.
cvarlist // Show the list of convars/concommands.
c_maxdistance "200"
c_maxpitch "90"
c_maxyaw "135"
c_mindistance "30"
c_minpitch "0"
c_minyaw "-135"
c_orthoheight "100"
c_orthowidth "100"
c_thirdpersonshoulder "0"
c_thirdpersonshoulderaimdist "120"
c_thirdpersonshoulderdist "40"
c_thirdpersonshoulderheight "5"
c_thirdpersonshoulderoffset "20"
dbghist_addline // Add a line to the debug history. Format: <category id> <line>
dbghist_dump // Dump the debug history to the console. Format: <category id> Categories: 0: Entity I/O 1: AI Decisions 2: Sc
debugsystemui // Show/hide the debug system UI.
debug_map_crc "0" // Prints CRC for each map lump loaded
debug_visibility_monitor "0"
default_fov "90"
demolist // Print demo sequence list.
demos // Demo demo file sequence.
demoui // Show/hide the demo player UI.
demo_gototick // Skips to a tick in demo.
demo_listhighlights // List all highlights data for the demo.
demo_listimportantticks // List all important ticks in the demo.
demo_pause // Pauses demo playback.
demo_recordcommands "1" // Record commands typed at console into .dem files.
demo_resume // Resumes demo playback.
demo_timescale // Sets demo replay speed.
demo_togglepause // Toggles demo playback.
developer "0" // Set developer message level
devshots_nextmap // Used by the devshots system to go to the next map in the devshots maplist.
devshots_screenshot // use the screenshot command instead.
differences // Show all convars which are not at their default values.
disable_static_prop_loading "0" // static props wont be loaded
disconnect // Disconnect game from server.
display_elapsedtime // Displays how much time has elapsed since the game started
display_game_events "0"
disp_list_all_collideable // List all collideable displacements
dlight_debug // Creates a dlight in front of the player
dm_reset_spawns
dm_togglerandomweapons // Turns random weapons in deathmatch on/off
drawcross // Draws a cross at the given location Arguments: x y z
drawline // Draws line between two 3D Points. Green if no collision Red is collides with something Arguments: x1 y1 z1 x2 y2 z2
drawoverviewmap // Draws the overview map
drawradar // Draws HUD radar
dsp_db_min "80"
dsp_db_mixdrop "0"
dsp_dist_max "1440"
dsp_dist_min "0"
dsp_enhance_stereo "1"
dsp_mix_max "0"
dsp_mix_min "0"
dsp_off "0"
dsp_player "0"
dsp_reload
dsp_slow_cpu "0"
dsp_volume "0"
ds_get_newest_subscribed_files // Re-reads web api auth key and subscribed file lists from disk and downloads the latest updates of those files from steam
dti_flush // Write out the datatable instrumentation files (you must run with -dti for this to work).
dt_dump_flattened_tables "0" // Dump out the flattened sendtable props.
dumpentityfactories // Lists all entity factory names.
dumpeventqueue // Dump the contents of the Entity I/O event queue to the console.
dumpgamestringtable // Dump the contents of the game string table to the console.
dumpstringtables // Print string tables to console.
dump_entity_sizes // Print sizeof(entclass)
dump_globals // Dump all global entities/states
dump_particlemanifest // Dump the list of particles loaded.
echo // Echo text to console.
econ_build_pinboard_images_from_collection_name // Renders and saves images for all models in a collection.
econ_clear_inventory_images // clear the local inventory images (they will regenerate)
econ_highest_baseitem_seen "62"
econ_show_items_with_tag // Lists the item definitions that have a specified tag.
editdemo // Edit a recorded demo file (.dem ).
editor_toggle // Disables the simulation and returns focus to the editor
enable_debug_overlays "1" // Enable rendering of debug overlays
enable_fast_math "1" // Turns Denormals-Are-Zeroes and Flush-to-Zero on or off
enable_skeleton_draw "0" // Render skeletons in wireframe
endmatch_votenextmap // Votes for the next map at the end of the match
endmovie // Stop recording movie frames.
endround // End the current round.
engine_no_focus_sleep "50"
ent_absbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
ent_attachments // Displays the attachment points on an entity. Arguments: {entity_name} / {class_name} / no argument picks what player is loo
ent_autoaim // Displays the entitys autoaim radius. Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
ent_bbox // Displays the movement bounding box for the given entity(ies) in orange. Some entites will also display entity specific overlay
ent_cancelpendingentfires // Cancels all ent_fire created outputs that are currently waiting for their delay to expire.
ent_create // Creates an entity of the given type where the player is looking.
ent_dump // Usage: ent_dump <entity name>
ent_fire // Usage: ent_fire <target> [action] [value] [delay]
ent_info // Usage: ent_info <class name>
ent_keyvalue // Applies the comma delimited key=value pairs to the entity with the given Hammer ID. Format: ent_keyvalue <entity id> <key1>=<v
ent_messages // Toggles input/output message display for the selected entity(ies). The name of the entity will be displayed as well as any mes
ent_messages_draw "0" // Visualizes all entity input/output activity.
ent_name
ent_orient // only orients target entitys YAW. Use the allangles opt
ent_pause // Toggles pausing of input/output message processing for entities. When turned on processing of all message will stop. Any mess
ent_pivot // Displays the pivot for the given entity(ies). (y=up=green, z=forward=blue, x=left=red). Arguments: {entity_name} / {class
ent_rbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
ent_remove // Removes the given entity(s) Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
ent_remove_all // Removes all entities of the specified type Arguments: {entity_name} / {class_name}
ent_rotate // Rotates an entity by a specified # of degrees
ent_script_dump // Dumps the names and values of this entitys script scope to the console Arguments: {entity_name} / {class_name} / no argume
ent_setang // Set entity angles
ent_setname // Sets the targetname of the given entity(s) Arguments: {new entity name} {entity_name} / {class_name} / no argument picks wh
ent_setpos // Move entity to position
ent_show_response_criteria // an entitys current criteria set used to select responses. Arguments: {entity_name} / {class_name} /
ent_step // When ent_pause is set this will step through one waiting input / output message at a time.
ent_teleport // Teleport the specified entity to where the player is looking. Format: ent_teleport <entity name>
ent_text // Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text) Arguments: {entity_
ent_viewoffset // Displays the eye position for the given entity(ies) in red. Arguments: {entity_name} / {class_name} / no argument picks wha
envmap
escape // Escape key pressed.
exec // Execute script file.
execifexists // Execute script file if file exists.
execwithwhitelist // only execing convars on a whitelist.
exit // Exit the engine.
explode // Kills the player with explosive damage
explodevector // Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>
fadein // fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.
fadeout // fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.
ff_damage_reduction_bullets "0" // How much to reduce damage done to teammates when shot. Range is from 0 - 1 (with 1 being damage equal to what is done to an en
ff_damage_reduction_grenade "0" // How much to reduce damage done to teammates by a thrown grenade. Range is from 0 - 1 (with 1 being damage equal to what is don
ff_damage_reduction_grenade_self "1" // How much to damage a player does to himself with his own grenade. Range is from 0 - 1 (with 1 being damage equal to what is do
ff_damage_reduction_other "0" // How much to reduce damage done to teammates by things other than bullets and grenades. Range is from 0 - 1 (with 1 being damag
find // Find concommands with the specified string in their name/help text.
findflags // Find concommands by flags.
find_ent // Find and list all entities with classnames or targetnames that contain the specified substring. Format: find_ent <substring>
find_ent_index // Display data for entity matching specified index. Format: find_ent_index <index>
firetarget
firstperson // Switch to firstperson camera.
fish_debug "0" // Show debug info for fish
fish_dormant "0" // Turns off interactive fish behavior. Fish become immobile and unresponsive.
flush // Flush unlocked cache memory.
flush_locked // Flush unlocked and locked cache memory.
fogui // Show/hide fog control UI.
fog_color "-1"
fog_colorskybox "-1"
fog_enable "1"
fog_enableskybox "1"
fog_enable_water_fog "1"
fog_end "-1"
fog_endskybox "-1"
fog_hdrcolorscale "-1"
fog_hdrcolorscaleskybox "-1"
fog_maxdensity "-1"
fog_maxdensityskybox "-1"
fog_override "0" // Overrides the maps fog settings (-1 populates fog_ vars with maps values)
fog_start "-1"
fog_startskybox "-1"
forcebind // Bind a command to an available key. (forcebind command opt:suggestedKey)
force_audio_english "0" // Keeps track of whether were forcing english in a localized language.
force_centerview
foundry_engine_get_mouse_control // Give the engine control of the mouse.
foundry_engine_release_mouse_control // Give the control of the mouse back to Hammer.
foundry_select_entity // Select the entity under the crosshair or select entities with the specified name.
foundry_sync_hammer_view // Move Hammers 3D view to the same position as the engines 3D view.
foundry_update_entity // Updates the entitys position/angles when in edit mode
fov_cs_debug "0" // Sets the view fov if cheats are on.
fps_max "300" // Frame rate limiter
fps_max_menu "120" // main menu
fps_screenshot_frequency "10" // While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds w
fps_screenshot_threshold "-1" // Dump a screenshot when the FPS drops below the given value.
fs_clear_open_duplicate_times // Clear the list of files that have been opened.
fs_dump_open_duplicate_times // Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was
fs_fios_cancel_prefetches // Cancels all the prefetches in progress.
fs_fios_flush_cache // Flushes the FIOS HDD cache.
fs_fios_prefetch_file // Prefetches a file: </PS3_GAME/USRDIR/filename.bin>. The preftech is medium priority and persistent.
fs_fios_prefetch_file_in_pack // Prefetches a file in a pack: <portal2/models/container_ride/fineDebris_part5.ani>. The preftech is medium priority and non-pers
fs_fios_print_prefetches // Displays all the prefetches currently in progress.
fs_printopenfiles // Show all files currently opened by the engine.
fs_report_sync_opens "0" // 2:Not during map load
fs_syncdvddevcache // Force the 360 to get updated files that are in your p4 changelist(s) from the host PC when running with -dvddev.
fs_warning_level // Set the filesystem warning level.
func_break_max_pieces "15"
fx_new_sparks "1" // Use new style sparks.
g15_dumpplayer // Spew player data.
g15_reload // Reloads the Logitech G-15 Keyboard configs.
g15_update_msec "250" // Logitech G-15 Keyboard update interval.
gameinstructor_dump_open_lessons // Gives a list of all currently open lessons.
gameinstructor_enable "1" // Display in game lessons that teach new players.
gameinstructor_find_errors "0" // Set to 1 and the game instructor will run EVERY scripted command to uncover errors.
gameinstructor_reload_lessons // Shuts down all open lessons and reloads them from the script file.
gameinstructor_reset_counts // Resets all display and success counts to zero.
gameinstructor_save_restore_lessons "1" // Set to 0 to disable save/load of open lesson opportunities in single player.
gameinstructor_verbose "0" // Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.
gameinstructor_verbose_lesson "0" // Display more verbose information for lessons have this name.
gamemenucommand // Issue game menu command.
gamepadslot1
gamepadslot2
gamepadslot3
gamepadslot4
gamepadslot5
gamepadslot6
gameui_activate // Shows the game UI
gameui_allowescape // Escape key allowed to hide game UI
gameui_allowescapetoshow // Escape key allowed to show game UI
gameui_hide // Hides the game UI
gameui_preventescape // Escape key doesnt hide game UI
gameui_preventescapetoshow // Escape key doesnt show game UI
game_mode "0" // The current game mode (based on game type). See GameModes.txt.
game_type "0" // The current game type. See GameModes.txt.
getpos // dump position and angles to the console
getpos_exact // dump origin and angles to the console
give // Give item to player. Arguments: <item_name>
givecurrentammo // Give a supply of ammo for current weapon..
global_event_log_enabled "0" // Enables the global event log system
global_set // 2 = DEAD).
glow_outline_effect_enable "1" // Enable entity outline glow effects.
glow_outline_width "6" // Width of glow outline effect in screen space.
gl_clear_randomcolor "0" // Clear the back buffer to random colors every frame. Helps spot open seams in geometry.
god // Toggle. Player becomes invulnerable.
gods // Toggle. All players become invulnerable.
gotv_theater_container "0" // setting it to live will play top live matches
groundlist // Display ground entity list <index>
g_debug_angularsensor "0"
g_debug_constraint_sounds "0" // Enable debug printing about constraint sounds.
g_debug_ragdoll_removal "0"
g_debug_ragdoll_visualize "0"
g_debug_trackpather "0"
g_debug_vehiclebase "0"
g_debug_vehicledriver "0"
g_debug_vehicleexit "0"
g_debug_vehiclesound "0"
g_jeepexitspeed "100"
hammer_update_entity // Updates the entitys position/angles when in edit mode
hammer_update_safe_entities // Updates entities in the map that can safely be updated (dont have parents or are affected by constraints). Also excludes entit
heartbeat // Force heartbeat of master servers
help // Find help about a convar/concommand.
hideconsole // Hide the console.
hidehud "0"
hideoverviewmap // Hides the overview map
hidepanel // Hides a viewport panel <name>
hideradar // Hides HUD radar
hidescores // Forcibly hide score panel
hostage_debug "0" // Show hostage AI debug information
hostfile "0" // The HOST file to load.
hostip "-1062686208.000" // Host game server ip
hostname "0" // Hostname for server.
hostport "27015" // Host game server port
host_filtered_time_report // Dumps time spent idle in previous frames in ms(dedicated only).
host_flush_threshold "12" // Memory threshold below which the host should flush caches between server instances
host_info_show "1" // 2 - show full info
host_map "0" // Current map name.
host_name_store "1" // Whether hostname is recorded in game events and GOTV.
host_players_show "1" // 2 - show all players
host_reset_config // reset config (for testing) with param as splitscreen index.
host_rules_show "1" // 1 - query enabled
host_runofftime // Run off some time without rendering/updating sounds
host_sleep "0" // Force the host to sleep a certain number of milliseconds each frame.
host_timer_report // Spew CPU timer jitter for the last 128 frames in microseconds (dedicated only)
host_timescale "1" // Prescale the clock by this amount.
host_workshop_collection // Get the latest version of maps in a workshop collection and host them as a maplist.
host_workshop_map // Get the latest version of the map and host it on this server.
host_writeconfig // Store current settings to config.cfg (or specified .cfg file).
host_writeconfig_ss // Store current settings to config.cfg (or specified .cfg file) with first param as splitscreen index.
hud_reloadscheme // Reloads hud layout and animation scripts.
hud_scaling "0" // Scales hud elements
hud_showtargetid "1" // Enables display of target names
hud_subtitles // Plays the Subtitles: <filename>
hud_takesshots "0" // Auto-save a scoreboard screenshot at the end of a map.
hunk_print_allocations
hunk_track_allocation_types "1"
hurtme // Hurts the player. Arguments: <health to lose>
impulse
incrementvar // Increment specified convar value.
inferno_child_spawn_interval_multiplier "0" // Amount spawn interval increases for each child
inferno_child_spawn_max_depth "4"
inferno_damage "40" // Damage per second
inferno_debug "0"
inferno_dlight_spacing "200" // Inferno dlights are at least this far apart
inferno_flame_lifetime "7" // Average lifetime of each flame in seconds
inferno_flame_spacing "42" // Minimum distance between separate flame spawns
inferno_forward_reduction_factor "0"
inferno_friendly_fire_duration "6" // FF is credited back to the thrower.
inferno_initial_spawn_interval "0" // Time between spawning flames for first fire
inferno_max_child_spawn_interval "0" // Largest time interval for child flame spawning
inferno_max_flames "16" // Maximum number of flames that can be created
inferno_max_range "150" // Maximum distance flames can spread from their initial ignition point
inferno_per_flame_spawn_duration "3" // Duration each new flame will attempt to spawn new flames
inferno_scorch_decals "1"
inferno_spawn_angle "45" // Angular change from parent
inferno_surface_offset "20"
inferno_velocity_decay_factor "0"
inferno_velocity_factor "0"
inferno_velocity_normal_factor "0"
invnext
invnextgrenade
invnextitem
invnextnongrenade
invprev
in_forceuser "0" // Force user input to this split screen player.
ip "0" // Overrides IP for multihomed hosts
ipc_console_disable // Disable IPC console(s)
ipc_console_disable_all // Disable all IPC consoles
ipc_console_enable // Enable IPC console
ipc_console_show // Show status of IPC consoles
ip_steam "0" // Overrides IP used to bind Steam port for multihomed hosts
ip_tv "0" // Overrides IP used to bind TV port for multihomed hosts
joyadvancedupdate
joystick "0" // false otherwise.
joystick_force_disabled "0" // Prevents any and all joystick input for cases where a piece of hardware is incorrectly identified as a joystick an sends bad si
joystick_force_disabled_set "0" // Sets controllers enabled/disabled just before the config is written.
joy_accelmax "1"
joy_accelscale "3"
joy_accelscalepoly "0"
joy_advanced "0"
joy_advaxisr "0"
joy_advaxisu "0"
joy_advaxisv "0"
joy_advaxisx "0"
joy_advaxisy "0"
joy_advaxisz "0"
joy_autoaimdampen "0" // How much to scale user stick input when the gun is pointing at a valid target.
joy_autoAimDampenMethod "0"
joy_autoaimdampenrange "0" // The stick range where autoaim dampening is applied. 0 = off
joy_axisbutton_threshold "0" // Analog axis range before a button press is registered.
joy_cfg_preset "1"
joy_circle_correct "1"
joy_curvepoint_1 "0"
joy_curvepoint_2 "0"
joy_curvepoint_3 "0"
joy_curvepoint_4 "1"
joy_curvepoint_end "2"
joy_diagonalpov "0" // too.
joy_display_input "0"
joy_forwardsensitivity "-1"
joy_forwardthreshold "0"
joy_gamma "0"
joy_inverty "0" // Whether to invert the Y axis of the joystick for looking.
joy_lowend "1"
joy_lowend_linear "0"
joy_lowmap "1"
joy_movement_stick "0" // 2 = legacy controls
joy_name "0"
joy_no_accel_jump "0"
joy_pitchsensitivity "-1" // joystick pitch sensitivity
joy_pitchthreshold "0"
joy_response_look "0" // 1=Acceleration Promotion
joy_response_look_pitch "1" // 1=Acceleration Promotion
joy_response_move "1" // 1/sensitivity
joy_sensitive_step0 "0"
joy_sensitive_step1 "0"
joy_sensitive_step2 "0"
joy_sidesensitivity "1"
joy_sidethreshold "0"
joy_wingmanwarrior_centerhack "0" // Wingman warrior centering hack.
joy_wingmanwarrior_turnhack "0" // Wingman warrior hack related to turn axes.
joy_yawsensitivity "-1" // joystick yaw sensitivity
joy_yawthreshold "0"
jpeg // Take a jpeg screenshot: jpeg <filename> <quality 1-100>.
kdtree_test // Tests spatial partition for entities queries.
key_findbinding // Find key bound to specified command string.
key_listboundkeys // List bound keys with bindings.
key_updatelayout // Updates game keyboard layout to current windows keyboard setting.
kick // Kick a player by name.
kickid // with a message.
kickid_ex // provide a force-the-kick flag and also assign a message.
kill // Kills the player with generic damage
killserver // Shutdown the server.
killvector // Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>
lastinv
lightcache_maxmiss "2"
lightprobe // Samples the lighting environment. Creates a cubemap and a file indicating the local lighting in a subdirectory called material
light_crosshair // Show texture color at crosshair
linefile // Parses map leak data from .lin file
listdemo // List demo file contents.
listid // Lists banned users.
listip // List IP addresses on the ban list.
listissues // List all the issues that can be voted on.
listmodels // List loaded models.
listRecentNPCSpeech // Displays a list of the last 5 lines of speech from NPCs.
load // Load a saved game.
loadcommentary
loader_dump_table
lobby_voice_chat_enabled "1" // Lobby microphone is enabled when this is set to 1
locator_split_len "0"
locator_split_maxwide_percent "0"
lockMoveControllerRet "0"
log // and udp < on | off >.
logaddress_add // Set address and port for remote host <ip:port>.
logaddress_del // Remove address and port for remote host <ip:port>.
logaddress_delall // Remove all udp addresses being logged to
logaddress_list // List all addresses currently being used by logaddress.
log_color // Set the color of a logging channel.
log_dumpchannels // Dumps information about all logging channels.
log_flags // Set the flags on a logging channel.
log_level // Set the spew level of a logging channel.
lookspring "0"
lookstrafe "0"
loopsingleplayermaps "0"
map // Start playing on specified map.
mapcycledisabled "0" // repeats the same map after each match instead of using the map cycle
mapgroup // Specify a map group
mapoverview_allow_client_draw "0" // Allow a client to draw on the map overview
maps // Displays list of maps.
map_background // Runs a map as the background to the main menu.
map_commentary // on a specified map.
map_edit
map_setbombradius // Sets the bomb radius for the map.
map_showbombradius // Shows bomb radius from the center of each bomb site and planted bomb.
map_showspawnpoints // Shows player spawn points (red=invalid). Optionally pass in the duration.
mat_accelerate_adjust_exposure_down "40"
mat_ambient_light_b "0"
mat_ambient_light_g "0"
mat_ambient_light_r "0"
mat_aniso_disable "0" // NOTE: You must change mat_forceaniso after changing this convar for this to take effect
mat_autoexposure_max "2"
mat_autoexposure_max_multiplier "1"
mat_autoexposure_min "0"
mat_bloomamount_rate "0"
mat_bumpbasis "0"
mat_camerarendertargetoverlaysize "128"
mat_colcorrection_forceentitiesclientside "0" // Forces color correction entities to be updated on the client
mat_colorcorrection "1"
mat_configcurrent // show the current video control panel config for the material system
mat_crosshair // Display the name of the material under the crosshair
mat_crosshair_edit // open the material under the crosshair in the editor defined by mat_crosshair_edit_editor
mat_crosshair_explorer // open the material under the crosshair in explorer and highlight the vmt file
mat_crosshair_printmaterial // print the material under the crosshair
mat_crosshair_reloadmaterial // reload the material under the crosshair
mat_custommaterialusage // Show memory usage for custom weapon materials.
mat_debugalttab "0"
mat_debug_bloom "0"
mat_debug_postprocessing_effects "0" // 2 = only apply post-processing to the centre of the screen
mat_disable_bloom "0"
mat_displacementmap "1"
mat_drawflat "0"
mat_drawgray "0"
mat_drawwater "1"
mat_dynamiclightmaps "0"
mat_dynamicPaintmaps "0"
mat_dynamic_tonemapping "1"
mat_edit // Bring up the material under the crosshair in the editor
mat_exposure_center_region_x "0"
mat_exposure_center_region_y "0"
mat_fastclip "0"
mat_fastnobump "0"
mat_fillrate "0"
mat_forcedynamic "0"
mat_force_bloom "0"
mat_force_tonemap_min_avglum "-1" // Override. Old default was 3.0
mat_force_tonemap_percent_bright_pixels "-1" // Override. Old value was 2.0
mat_force_tonemap_percent_target "-1" // Override. Old default was 60.
mat_force_tonemap_scale "0"
mat_frame_sync_enable "1"
mat_frame_sync_force_texture "0" // Force frame syncing to lock a managed texture.
mat_fullbright "0"
mat_hdr_enabled // Report if HDR is enabled for debugging
mat_hdr_uncapexposure "0"
mat_hsv "0"
mat_info // Shows material system info
mat_leafvis "0" // or [3] entire PVS (see mat_leafvis_draw_mask for what
mat_loadtextures "1"
mat_local_contrast_edge_scale_override "-1000"
mat_local_contrast_midtone_mask_override "-1"
mat_local_contrast_scale_override "0"
mat_local_contrast_vignette_end_override "-1"
mat_local_contrast_vignette_start_override "-1"
mat_lpreview_mode "-1"
mat_luxels "0"
mat_measurefillrate "0"
mat_monitorgamma "2" // monitor gamma (typically 2.2 for CRT and 1.7 for LCD)
mat_monitorgamma_tv_enabled "0"
mat_morphstats "0"
mat_norendering "0"
mat_normalmaps "0"
mat_normals "0"
mat_postprocess_enable "1"
mat_powersavingsmode "0" // Power Savings Mode
mat_proxy "0"
mat_queue_mode "-1" // 2=queued
mat_queue_priority "1"
mat_queue_report "0" // Report thread stalls. Positive number will filter by stalls >= time in ms. -1 reports all locks.
mat_reloadallcustommaterials // Reloads all custom materials
mat_reloadallmaterials // Reloads all materials
mat_reloadmaterial // Reloads a single material
mat_reloadtextures // Reloads all textures
mat_remoteshadercompile "127"
mat_rendered_faces_count "0" // Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use mat_re
mat_rendered_faces_spew // mat_rendered_faces_spew <n> Spew the number of faces rendered for the top N models used this frame (mat_rendered_faces_count
mat_reporthwmorphmemory // Reports the amount of size in bytes taken up by hardware morph textures.
mat_reversedepth "0"
mat_savechanges // saves current video configuration to the registry
mat_setvideomode // windowed state of the material system
mat_shadercount // display count of all shaders and reset that count
mat_showcamerarendertarget "0"
mat_showframebuffertexture "0"
mat_showlowresimage "0"
mat_showmaterials // Show materials.
mat_showmaterialsverbose // Show materials (verbose version).
mat_showmiplevels "0" // 1: everything else
mat_showtextures // Show used textures.
mat_showwatertextures "0"
mat_show_histogram "0"
mat_show_texture_memory_usage "0" // Display the texture memory usage on the HUD.
mat_softwareskin "0"
mat_spewalloc "0"
mat_spewvertexandpixelshaders // Print all vertex and pixel shaders currently loaded to the console
mat_stub "0"
mat_surfaceid "0"
mat_surfacemat "0"
mat_tessellationlevel "6"
mat_tessellation_accgeometrytangents "0"
mat_tessellation_cornertangents "1"
mat_tessellation_update_buffers "1"
mat_texture_list_content_path "0" // itll assume your content directory is next to the currently runn
mat_texture_list_exclude // save - saves exclude list file
mat_texture_list_txlod // -1 to dec resolution
mat_texture_list_txlod_sync // save - saves all changes to material content files
mat_tonemap_algorithm "1" // 0 = Original Algorithm 1 = New Algorithm
mat_updateconvars // updates the video config convars
mat_viewportscale "1" // Scale down the main viewport (to reduce GPU impact on CPU profiling)
mat_viewportupscale "1" // Scale the viewport back up
mat_wireframe "0"
mat_yuv "0"
maxplayers // Change the maximum number of players allowed on this server.
mc_accel_band_size "0" // Percentage of half the screen width or height.
mc_dead_zone_radius "0" // 0 to 0.9. 0 being just around the center of the screen and 1 being the edges of the screen.
mc_max_pitchrate "100" // (degrees/sec)
mc_max_yawrate "230" // (degrees/sec)
mdlcache_dump_dictionary_state // Dump the state of the MDLCache Dictionary.
memory // Print memory stats.
mem_compact
mem_dump // Dump memory stats to text file.
mem_dumpvballocs // Dump VB memory allocation stats.
mem_eat
mem_incremental_compact
mem_incremental_compact_rate "0" // Rate at which to attempt internal heap compation
mem_test
mem_vcollide // Dumps the memory used by vcollides
mem_verify // Verify the validity of the heap
menuselect // menuselect
minisave // Saves game (for current level only!)
mm_csgo_community_search_players_min "3" // When performing CSGO community matchmaking look for servers with at least so many human players
mm_datacenter_debugprint // Shows information retrieved from data center
mm_debugprint // Show debug information about current matchmaking session
mm_dedicated_force_servers "0" // Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers. Use sy
mm_dedicated_search_maxping "150" // Longest preferred ping to dedicated servers for games
mm_dlc_debugprint // Shows information about dlc
mm_queue_show_stats // Display global server stats
mm_server_search_lan_ports "27015" // Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.
mm_session_search_ping_buckets "4"
mm_session_search_qos_timeout "15"
mod_combiner_info // debug spew for Combiner Info
mod_DumpWeaponWiewModelCache // Dumps the weapon view model cache contents
mod_DumpWeaponWorldModelCache // Dumps the weapon world model cache contents
molotov_throw_detonate_time "2"
motdfile "0" // The MOTD file to load.
movie_fixwave // etc.
mp_afterroundmoney "0" // amount of money awared to every player after each round
mp_autokick "1" // Kick idle/team-killing/team-damaging players
mp_autoteambalance "1"
mp_backup_restore_list_files // accepts a numeric parameter to limit the number o
mp_backup_restore_load_autopause "1" // Whether to automatically pause the match after restoring round data from backup
mp_backup_restore_load_file // scores and team scores; resets to the next round after the backup
mp_backup_round_auto "1" // If enabled will keep in-memory backups to handle reconnecting players even if the backup files arent written to disk
mp_backup_round_file "0" // If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_scor
mp_backup_round_file_last "0" // Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.
mp_backup_round_file_pattern "0" // e.g.%prefix%_%date%_%time%_%team1%_
mp_buytime "90" // How many seconds after round start players can buy items for.
mp_buy_allow_grenades "1" // Whether players can purchase grenades from the buy menu or not.
mp_buy_anywhere "0" // not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
mp_buy_during_immunity "0" // ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
mp_c4timer "45" // how long from when the C4 is armed until it blows
mp_competitive_endofmatch_extra_time "15" // After a competitive match finishes rematch voting extra time is given for rankings.
mp_ct_default_grenades "0" // separate each weapon class with a space like thi
mp_ct_default_melee "0" // it shou
mp_ct_default_primary "0" // The default primary (rifle) weapon that the CTs will spawn with
mp_ct_default_secondary "0" // The default secondary (pistol) weapon that the CTs will spawn with
mp_deathcam_skippable "1" // Determines whether a player can early-out of the deathcam.
mp_death_drop_c4 "1" // Whether c4 is droppable
mp_death_drop_defuser "1" // Drop defuser on player death
mp_death_drop_grenade "2" // 2=current or best
mp_death_drop_gun "1" // 2=current or best
mp_default_team_winner_no_objective "-1" // the value of this convar will declare the winner when the time run
mp_defuser_allocation "0" // 2=everyone
mp_disable_autokick // Prevents a userid from being auto-kicked
mp_display_kill_assists "1" // Whether to display and score player assists
mp_dm_bonus_length_max "30" // Maximum time the bonus time will last (in seconds)
mp_dm_bonus_length_min "30" // Minimum time the bonus time will last (in seconds)
mp_dm_bonus_percent "50" // Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.
mp_dm_time_between_bonus_max "40" // Maximum time a bonus time will start after the round start or after the last bonus (in seconds)
mp_dm_time_between_bonus_min "30" // Minimum time a bonus time will start after the round start or after the last bonus (in seconds)
mp_do_warmup_offine "0" // Whether or not to do a warmup period at the start of a match in an offline (bot) match.
mp_do_warmup_period "1" // Whether or not to do a warmup period at the start of a match.
mp_dump_timers // Prints round timers to the console for debugging
mp_endmatch_votenextleveltime "20" // players have this much time to vote on the next map at match end.
mp_endmatch_votenextmap "1" // Whether or not players vote for the next map at the end of the match when the final scoreboard comes up
mp_endmatch_votenextmap_keepcurrent "1" // the current map is not guaranteed to be in the
mp_forcecamera "1" // Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_
mp_forcerespawnplayers // Force all players to respawn.
mp_forcewin // Forces team to win
mp_force_assign_teams "0" // it is auto assinged.
mp_force_pick_time "15" // The amount of time a player has on the team screen to make a selection before being auto-teamed
mp_freezetime "6" // how many seconds to keep players frozen when the round starts
mp_free_armor "0" // Determines whether armor and helmet are given automatically.
mp_friendlyfire "0" // Allows team members to injure other members of their team
mp_ggprogressive_random_weapon_kills_needed "2" // this is the number of kills needed with each weapon
mp_ggprogressive_round_restart_delay "15" // Number of seconds to delay before restarting a round after a win in gungame progessive
mp_ggprogressive_use_random_weapons "1" // selects random weapons from set categories for the progression order
mp_ggtr_bomb_defuse_bonus "1" // Number of bonus upgrades to award the CTs when they defuse a gun game bomb
mp_ggtr_bomb_detonation_bonus "1" // Number of bonus upgrades to award the Ts when they detonate a gun game bomb
mp_ggtr_bomb_pts_for_flash "4" // Kill points required in a round to get a bonus flash grenade
mp_ggtr_bomb_pts_for_he "3" // Kill points required in a round to get a bonus HE grenade
mp_ggtr_bomb_pts_for_molotov "5" // Kill points required in a round to get a bonus molotov cocktail
mp_ggtr_bomb_pts_for_upgrade "2" // Kill points required to upgrade a players weapon
mp_ggtr_bomb_respawn_delay "0" // Number of seconds to delay before making the bomb available to a respawner in gun game
mp_ggtr_end_round_kill_bonus "1" // Number of bonus points awarded in Demolition Mode when knife kill ends round
mp_ggtr_halftime_delay "0" // Number of seconds to delay during TR Mode halftime
mp_ggtr_last_weapon_kill_ends_half "0" // End the half and give a team round point when a player makes a kill using the final weapon
mp_ggtr_num_rounds_autoprogress "3" // Upgrade the players weapon after this number of rounds without upgrading
mp_give_player_c4 "1" // Whether this map should spawn a c4 bomb for a player or not.
mp_halftime "0" // Determines whether the match switches sides in a halftime event.
mp_halftime_duration "15" // Number of seconds that halftime lasts
mp_halftime_pausetimer "0" // Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.
mp_hostages_max "2" // Maximum number of hostages to spawn.
mp_hostages_rescuetime "1" // Additional time added to round time if a hostage is reached by a CT.
mp_hostages_run_speed_modifier "1" // slow down hostages by setting this to < 1.0.
mp_hostages_spawn_farthest "0" // When enabled will consistently force the farthest hostages to spawn.
mp_hostages_spawn_force_positions "0" // 6
mp_hostages_spawn_same_every_round "1" // 1 = same spawns for entire match.
mp_hostages_takedamage "0" // Whether or not hostages can be hurt.
mp_humanteam "0" // T}
mp_ignore_round_win_conditions "0" // Ignore conditions which would end the current round
mp_join_grace_time "2" // Number of seconds after round start to allow a player to join a game
mp_limitteams "2" // Max # of players 1 team can have over another (0 disables check)
mp_logdetail "0" // 3=both)
mp_match_can_clinch "1" // Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?
mp_match_end_changelevel "0" // perform a changelevel even if next map is the same
mp_match_end_restart "0" // perform a restart instead of loading a new map
mp_match_restart_delay "15" // Time (in seconds) until a match restarts.
mp_maxmoney "16000" // maximum amount of money allowed in a players account
mp_maxrounds "0" // max number of rounds to play before server changes maps
mp_molotovusedelay "15" // Number of seconds to delay before the molotov can be used after acquiring it
mp_overtime_enable "0" // use overtime rules to determine winner
mp_overtime_halftime_pausetimer "0" // If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the t
mp_overtime_maxrounds "6" // When overtime is enabled play additional rounds to determine winner
mp_overtime_startmoney "10000" // Money assigned to all players at start of every overtime half
mp_pause_match // Pause the match in the next freeze time
mp_playercashawards "1" // Players can earn money by performing in-game actions
mp_playerid "0" // Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names
mp_playerid_delay "0" // Number of seconds to delay showing information in the status bar
mp_playerid_hold "0" // Number of seconds to keep showing old information in the status bar
mp_radar_showall "0" // Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
mp_randomspawn "0" // Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.
mp_randomspawn_los "1" // determines whether to test Line of Sight when spawning.
mp_respawnwavetime_ct "10" // Time between respawn waves for CTs.
mp_respawnwavetime_t "10" // Time between respawn waves for Terrorists.
mp_respawn_immunitytime "4" // How many seconds after respawn immunity lasts.
mp_respawn_on_death_ct "0" // counter-terrorists will respawn after dying.
mp_respawn_on_death_t "0" // terrorists will respawn after dying.
mp_restartgame "0" // game will restart in the specified number of seconds
mp_roundtime "5" // How many minutes each round takes.
mp_roundtime_defuse "0" // How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.
mp_roundtime_hostage "0" // How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.
mp_round_restart_delay "7" // Number of seconds to delay before restarting a round after a win
mp_scrambleteams // Scramble the teams and restart the game
mp_solid_teammates "1" // Determines whether teammates are solid or not.
mp_spawnprotectiontime "5" // Kick players who team-kill within this many seconds of a round restart.
mp_spectators_max "2" // How many spectators are allowed in a match.
mp_spec_swapplayersides "0" // Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.
mp_startmoney "800" // amount of money each player gets when they reset
mp_swapteams // Swap the teams and restart the game
mp_switchteams // Switch teams and restart the game
mp_td_dmgtokick "300" // The damage threshhold players have to exceed in a match to get kicked.
mp_td_dmgtowarn "200" // The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.
mp_td_spawndmgthreshold "50" // The damage threshold players have to exceed at the start of the round to be warned/kick.
mp_teamcashawards "1" // Teams can earn money by performing in-game actions
mp_teamflag_1 "0" // Enter a countrys alpha 2 code to show that flag next to team 1s name in the spectator scoreboard.
mp_teamflag_2 "0" // Enter a countrys alpha 2 code to show that flag next to team 2s name in the spectator scoreboard.
mp_teammatchstat_1 "0" // A non-empty string sets first teams match stat.
mp_teammatchstat_2 "0" // A non-empty string sets second teams match stat.
mp_teammatchstat_cycletime "45" // Cycle match stats after so many seconds
mp_teammatchstat_holdtime "5" // Decide on a match stat and hold it additionally for at least so many seconds
mp_teammatchstat_txt "0" // e.g. Match 2 of 3.
mp_teammates_are_enemies "0" // your teammates act as enemies and all players are valid targets.
mp_teamname_1 "0" // A non-empty string overrides the first teams name.
mp_teamname_2 "0" // A non-empty string overrides the second teams name.
mp_teamprediction_pct "0" // A value between 1 and 99 will show predictions in favor of CT team.
mp_teamprediction_txt "0" // A value between 1 and 99 will set predictions in favor of first team.
mp_timelimit "5" // game time per map in minutes
mp_tkpunish "0" // 1=yes}
mp_tournament_restart // Restart Tournament Mode on the current level.
mp_t_default_grenades "0" // separate each weapon class with a space like this
mp_t_default_melee "0" // The default melee weapon that the Ts will spawn with
mp_t_default_primary "0" // The default primary (rifle) weapon that the Ts will spawn with
mp_t_default_secondary "0" // The default secondary (pistol) weapon that the Ts will spawn with
mp_unpause_match // Resume the match
mp_use_respawn_waves "0" // they will respawn in waves.
mp_verbose_changelevel_spew "1"
mp_warmuptime "30" // How long the warmup period lasts. Changing this value resets warmup.
mp_warmuptime_all_players_connected "60" // Warmup time to use when all players have connected in official competitive. 0 to disable.
mp_warmup_end // End warmup immediately.
mp_warmup_pausetimer "0" // Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.
mp_warmup_start // Start warmup.
mp_weapons_allow_map_placed "0" // the game will not delete weapons placed in the map.
mp_weapons_allow_randomize "0" // If set to >0 the buy menu will populate with random weapons with the value of this convar specifying how many from each weapon
mp_weapons_allow_zeus "1" // Determines whether the Zeus is purchasable or not.
mp_weapons_glow_on_ground "0" // weapons on the ground will have a glow around them.
mp_win_panel_display_time "3" // The amount of time to show the win panel between matches / halfs
ms_player_dump_properties // Prints a dump the current players property data
multvar // Multiply specified convar value.
muzzleflash_light "1"
m_customaccel "3" // Custom mouse acceleration: 0: custom accelaration disabled 1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta,
m_customaccel_exponent "1" // Mouse move is raised to this power before being scaled by scale factor.
m_customaccel_max "0" // 0 for no limit
m_customaccel_scale "0" // Custom mouse acceleration value.
m_forward "1" // Mouse forward factor.
m_mouseaccel1 "0" // Windows mouse acceleration initial threshold (2x movement).
m_mouseaccel2 "0" // Windows mouse acceleration secondary threshold (4x movement).
m_mousespeed "1" // 2 to enable secondary threshold
m_pitch "0" // Mouse pitch factor.
m_rawinput "1" // Use Raw Input for mouse input.
m_side "0" // Mouse side factor.
m_yaw "0" // Mouse yaw factor.
name "0" // Current user name
nav_add_to_selected_set // Add current area to the selected set.
nav_add_to_selected_set_by_id // Add specified area id to the selected set.
nav_analyze // Re-analyze the current Navigation Mesh and save it to disk.
nav_area_bgcolor "503316480" // RGBA color to draw as the background color for nav areas while editing.
nav_area_max_size "50" // Max area size created in nav generation
nav_avoid // Toggles the avoid this area when possible flag used by the AI system.
nav_begin_area // drag the opposite corner to the desired location and
nav_begin_deselecting // Start continuously removing from the selected set.
nav_begin_drag_deselecting // Start dragging a selection area.
nav_begin_drag_selecting // Start dragging a selection area.
nav_begin_selecting // Start continuously adding to the selected set.
nav_begin_shift_xy // Begin shifting the Selected Set.
nav_build_ladder // Attempts to build a nav ladder on the climbable surface under the cursor.
nav_check_connectivity // Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).
nav_check_file_consistency // Scans the maps directory and reports any missing/out-of-date navigation files.
nav_check_floor // Updates the blocked/unblocked status for every nav area.
nav_check_stairs // Update the nav mesh STAIRS attribute
nav_chop_selected // Chops all selected areas into their component 1x1 areas
nav_clear_attribute // Remove given nav attribute from all areas in the selected set.
nav_clear_selected_set // Clear the selected set.
nav_clear_walkable_marks // Erase any previously placed walkable positions.
nav_compress_id // Re-orders area and ladder IDs so they are continuous.
nav_connect // then invoke the connect command. Note that this creates a
nav_coplanar_slope_limit "0"
nav_coplanar_slope_limit_displacement "0"
nav_corner_adjust_adjacent "18" // radius used to raise/lower corners in nearby areas when raising/lowering corners.
nav_corner_lower // Lower the selected corner of the currently marked Area.
nav_corner_place_on_ground // Places the selected corner of the currently marked Area on the ground.
nav_corner_raise // Raise the selected corner of the currently marked Area.
nav_corner_select // Select a corner of the currently marked Area. Use multiple times to access all four corners.
nav_create_area_at_feet "0" // Anchor nav_begin_area Z to editing players feet
nav_create_place_on_ground "0" // nav areas will be placed flush with the ground when created by hand.
nav_crouch // Toggles the must crouch in this area flag used by the AI system.
nav_debug_blocked "0"
nav_delete // Deletes the currently highlighted Area.
nav_delete_marked // Deletes the currently marked Area (if any).
nav_disconnect // then invoke the disconnect command. This will remove all connec
nav_displacement_test "10000" // Checks for nodes embedded in displacements (useful for in-development maps)
nav_dont_hide // Toggles the area is not suitable for hiding spots flag used by the AI system.
nav_draw_limit "500" // The maximum number of areas to draw in edit mode
nav_edit "0" // Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.
nav_end_area // Defines the second corner of a new Area or Ladder and creates it.
nav_end_deselecting // Stop continuously removing from the selected set.
nav_end_drag_deselecting // Stop dragging a selection area.
nav_end_drag_selecting // Stop dragging a selection area.
nav_end_selecting // Stop continuously adding to the selected set.
nav_end_shift_xy // Finish shifting the Selected Set.
nav_flood_select // use this command again.
nav_generate // Generate a Navigation Mesh for the current map and save it to disk.
nav_generate_fencetops "1" // Autogenerate nav areas on fence and obstacle tops
nav_generate_fixup_jump_areas "1" // Convert obsolete jump areas into 2-way connections
nav_generate_incremental // Generate a Navigation Mesh for the current map and save it to disk.
nav_generate_incremental_range "2000"
nav_generate_incremental_tolerance "0" // Z tolerance for adding new nav areas.
nav_gen_cliffs_approx // post-processing approximation
nav_jump // Toggles the traverse this area by jumping flag used by the AI system.
nav_ladder_flip // Flips the selected ladders direction.
nav_load // Loads the Navigation Mesh for the current map.
nav_lower_drag_volume_max // Lower the top of the drag select volume.
nav_lower_drag_volume_min // Lower the bottom of the drag select volume.
nav_make_sniper_spots // Chops the marked area into disconnected sub-areas suitable for sniper spots.
nav_mark // Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.
nav_mark_attribute // Set nav attribute for all areas in the selected set.
nav_mark_unnamed // Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting.
nav_mark_walkable // Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate
nav_max_view_distance "0" // Maximum range for precomputed nav mesh visibility (0 = default 1500 units)
nav_max_vis_delta_list_length "64"
nav_merge // and invoke the merge comm
nav_merge_mesh // Merges a saved selected set into the current mesh.
nav_no_hostages // Toggles the hostages cannot use this area flag used by the AI system.
nav_no_jump // Toggles the dont jump in this area flag used by the AI system.
nav_place_floodfill // and flood-fills the Place to all adjacent Areas. Flood-filli
nav_place_list // Lists all place names used in the map.
nav_place_pick // Sets the current Place to the Place of the Area under the cursor.
nav_place_replace // Replaces all instances of the first place with the second place.
nav_place_set // Sets the Place of all selected areas to the current Place.
nav_potentially_visible_dot_tolerance "0"
nav_precise // Toggles the dont avoid obstacles flag used by the AI system.
nav_quicksave "0" // Set to one to skip the time consuming phases of the analysis. Useful for data collection and testing.
nav_raise_drag_volume_max // Raise the top of the drag select volume.
nav_raise_drag_volume_min // Raise the bottom of the drag select volume.
nav_recall_selected_set // Re-selects the stored selected set.
nav_remove_from_selected_set // Remove current area from the selected set.
nav_remove_jump_areas // replacing them with connections.
nav_run // Toggles the traverse this area by running flag used by the AI system.
nav_save // Saves the current Navigation Mesh to disk.
nav_save_selected // Writes the selected set to disk for merging into another mesh via nav_merge_mesh.
nav_selected_set_border_color "-16751516" // Color used to draw the selected set borders while editing.
nav_selected_set_color "1623785472.000" // Color used to draw the selected set background while editing.
nav_select_blocked_areas // Adds all blocked areas to the selected set
nav_select_damaging_areas // Adds all damaging areas to the selected set
nav_select_half_space // Selects any areas that intersect the given half-space.
nav_select_invalid_areas // Adds all invalid areas to the Selected Set.
nav_select_obstructed_areas // Adds all obstructed areas to the selected set
nav_select_overlapping // Selects nav areas that are overlapping others.
nav_select_radius // Adds all areas in a radius to the selection set
nav_select_stairs // Adds all stairway areas to the selected set
nav_set_place_mode // Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names.
nav_shift // Shifts the selected areas by the specified amount
nav_show_approach_points "0" // Show Approach Points in the Navigation Mesh.
nav_show_area_info "0" // Duration in seconds to show nav area ID and attributes while editing
nav_show_compass "0"
nav_show_continguous "0" // Highlight non-contiguous connections
nav_show_danger "0" // Show current danger levels.
nav_show_light_intensity "0"
nav_show_nodes "0"
nav_show_node_grid "0"
nav_show_node_id "0"
nav_show_player_counts "0" // Show current player counts in each area.
nav_show_potentially_visible "0" // Show areas that are potentially visible from the current nav area
nav_simplify_selected // Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas
nav_slope_limit "0" // The ground unit normals Z component must be greater than this for nav areas to be generated.
nav_slope_tolerance "0" // The ground unit normals Z component must be this close to the nav areas Z component to be generated.
nav_snap_to_grid "0" // Snap to the nav generation grid when creating new nav areas
nav_solid_props "0" // Make props solid to nav generation/editing
nav_splice // connected area between them.
nav_split // align the split line using your cursor and invoke the split command.
nav_split_place_on_ground "0" // nav areas will be placed flush with the ground when split.
nav_stand // Toggles the stand while hiding flag used by the AI system.
nav_stop // Toggles the must stop when entering this area flag used by the AI system.
nav_store_selected_set // Stores the current selected set for later retrieval.
nav_strip // and Encounter Spots from the current Area.
nav_subdivide // Subdivides all selected areas.
nav_test_node "0"
nav_test_node_crouch "0"
nav_test_node_crouch_dir "4"
nav_test_stairs // Test the selected set for being on stairs
nav_toggle_deselecting // Start or stop continuously removing from the selected set.
nav_toggle_in_selected_set // Remove current area from the selected set.
nav_toggle_place_mode // Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names.
nav_toggle_place_painting // pointing at an Area will paint it with the current Place.
nav_toggle_selected_set // Toggles all areas into/out of the selected set.
nav_toggle_selecting // Start or stop continuously adding to the selected set.
nav_transient // Toggles the area is transient and may become blocked flag used by the AI system.
nav_unmark // Clears the marked Area or Ladder.
nav_update_blocked // Updates the blocked/unblocked status for every nav area.
nav_update_lighting // Recomputes lighting values
nav_update_visibility_on_edit "0" // If nonzero editing the mesh will incrementally recompue visibility
nav_use_place // the current Place is set.
nav_walk // Toggles the traverse this area by walking flag used by the AI system.
nav_warp_to_mark // Warps the player to the marked area.
nav_world_center // Centers the nav mesh in the world
net_allow_multicast "1"
net_blockmsg "0" // Discards incoming message: <0|1|name>
net_channels // Shows net channel info
net_droponsendoverflow "0" // channel will drop client when sending too much data causes buffer overrun
net_droppackets "0" // Drops next n packets on client
net_dumpeventstats // Dumps out a report of game event network usage
net_earliertempents "0"
net_fakejitter "0" // Jitter fakelag packet time
net_fakelag "0" // Lag all incoming network data (including loopback) by this many milliseconds.
net_fakeloss "0" // Simulate packet loss as a percentage (negative means drop 1/n packets)
net_graph "0"
net_graphheight "65" // Height of netgraph panel
net_graphholdsvframerate "0" // Hold worst case in server framerate line.
net_graphmsecs "400" // The latency graph represents this many milliseconds.
net_graphpos "1"
net_graphproportionalfont "1" // Determines whether netgraph font is proportional or not
net_graphshowinterp "1" // Draw the interpolation graph.
net_graphshowlatency "1" // Draw the ping/packet loss graph.
net_graphshowsvframerate "0" // Draw the server framerate graph.
net_graphsolid "1"
net_graphtext "1" // Draw text fields
net_maxroutable "1200" // Requested max packet size before packets are split.
net_public_adr "0" // this is the public facing ip address string: (x.x.x.x
net_scale "5"
net_showreliablesounds "0"
net_showsplits "0" // Show info about packet splits
net_showudp "0" // Dump UDP packets summary to console
net_showudp_oob "0" // Dump OOB UDP packets summary to console
net_showudp_remoteonly "0" // Dump non-loopback udp only
net_splitrate "1" // Number of fragments for a splitpacket that can be sent per frame
net_start // Inits multiplayer network sockets
net_status // Shows current network status
net_steamcnx_allowrelay "1" // Allow steam connections to attempt to use relay servers as fallback (best if specified on command line: +net_steamcnx_allowrel
net_steamcnx_enabled "1" // 2 forces use of steam connections instead of raw UDP.
net_steamcnx_status // Print status of steam connection sockets.
net_threaded_socket_burst_cap "256" // Max number of packets per burst beyond which threaded socket pump algorithm will start dropping packets.
net_threaded_socket_recovery_rate "6400" // Number of packets per second that threaded socket pump algorithm allows from client.
net_threaded_socket_recovery_time "60" // Number of seconds over which the threaded socket pump algorithm will fully recover client ratelimit.
next "0" // Set to 1 to advance to next frame ( when singlestep == 1 )
nextdemo // Play next demo in sequence.
nextlevel "0" // will trigger a changelevel to the specified map at the end of the round
nextmap_print_enabled "0" // When enabled prints next map to clients
noclip // Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable
noclip_fixup "1"
notarget // Toggle. Player becomes hidden to NPCs.
npc_ally_deathmessage "1"
npc_ammo_deplete // Subtracts half of the targets ammo
npc_bipass // s
npc_combat // Displays text debugging information about the squad and enemy of the selected NPC (See Overlay Text) Arguments: {npc_name}
npc_conditions // Displays all the current AI conditions that an NPC has in the overlay text. Arguments: {npc_name} / {npc class_name} / no a
npc_create // Creates an NPC of the given type where the player is looking (if the given NPC can actually stand at that location). Argumen
npc_create_aimed // Creates an NPC aimed away from the player of the given type where the player is looking (if the given NPC can actually stand at
npc_destroy // Removes the given NPC(s) from the universe Arguments: {npc_name} / {npc_class_name} / no argument picks what player is looki
npc_destroy_unselected // Removes all NPCs from the universe that arent currently selected
npc_enemies // Shows memory of NPC. Draws an X on top of each memory. Eluded entities drawn in blue (dont know where it went) Unreachable
npc_focus // Displays red line to NPCs enemy (if has one) and blue line to NPCs target entity (if has one) Arguments: {npc_name} / {np
npc_freeze // uses the NPC under the crosshair. Arguments
npc_freeze_unselected // Freeze all NPCs not selected
npc_go // Selected NPC(s) will go to the location that the player is looking (shown with a purple box) Arguments: -none-
npc_go_random // Sends all selected NPC(s) to a random node. Arguments: -none-
npc_heal // Heals the target back to full health
npc_height_adjust "1" // Enable test mode for ik height adjustment
npc_kill // Kills the given NPC(s) Arguments: {npc_name} / {npc_class_name} / no argument picks what player is looking at
npc_nearest // Draws a while box around the NPC(s) nearest node Arguments: {entity_name} / {class_name} / no argument picks what player i
npc_relationships // Displays the relationships between this NPC and all others. Arguments: {entity_name} / {class_name} / no argument picks wha
npc_reset // Reloads schedules for all NPCs from their script files Arguments: -none-
npc_route // Displays the current route of the given NPC as a line on the screen. Waypoints along the route are drawn as small cyan rectang
npc_select // Select or deselects the given NPC(s) for later manipulation. Selected NPCs are shown surrounded by a red translucent box Arg
npc_set_freeze // uses the NPC under the crosshair. Arguments
npc_set_freeze_unselected // Freeze all NPCs not selected
npc_squads // Obsolete. Replaced by npc_combat
npc_steering // Displays the steering obstructions of the NPC (used to perform local avoidance) Arguments: {entity_name} / {class_name} / n
npc_steering_all // Displays the steering obstructions of all NPCs (used to perform local avoidance)
npc_tasks // Displays detailed text debugging information about the all the tasks of the selected NPC current schedule (See Overlay Text) A
npc_task_text // Outputs text debugging information to the console about the all the tasks + break conditions of the selected NPC current schedu
npc_teleport // Selected NPC will teleport to the location that the player is looking (shown with a purple box) Arguments: -none-
npc_thinknow // Trigger NPC to think
npc_viewcone // Displays the viewcone of the NPC (where they are currently looking and what the extents of there vision is) Arguments: {ent
observer_use
option_duck_method "0"
option_speed_method "0"
paintsplat_bias "0" // Change bias value for computing circle buffer
paintsplat_max_alpha_noise "0" // Max noise value of circle alpha
paintsplat_noise_enabled "1"
panel_test_title_safe "0" // Test vgui panel positioning with title safe indentation
particle_simulateoverflow "0" // Used for stress-testing particle systems. Randomly denies creation of particles.
particle_test_attach_attachment "0" // Attachment index for attachment mode
particle_test_attach_mode "0" // follow_origin
particle_test_file "0" // Name of the particle system to dynamically spawn
particle_test_start // particle_test_attach_mode and particl
particle_test_stop // Stops all particle systems on the selected entities. Arguments: {entity_name} / {class_name} / no argument picks what playe
password "0" // Current server access password
path // Show the engine filesystem path.
pause // Toggle the server pause state.
perfui // Show/hide the level performance tools UI.
perfvisualbenchmark
perfvisualbenchmark_abort
physics_budget // Times the cost of each active object
physics_constraints // Highlights constraint system graph for an entity
physics_debug_entity // Dumps debug info for an entity
physics_highlight_active // Turns on the absbox for all active physics objects
physics_report_active // Lists all active physics objects
physics_select // Dumps debug info for an entity
phys_debug_check_contacts "0"
phys_show_active "0"
picker // pivot and debugging text is displayed for whatever entity the play
ping // Display ping to server.
pingserver // Ping a server for info
pixelvis_debug // Dump debug info
play // Play a sound.
playdemo // Play a recorded demo file (.dem ).
player_botdifflast_s "2"
player_competitive_maplist7 "0"
player_debug_print_damage "0" // print amount and type of all damage received by player to console.
player_gamemodelast_m "0"
player_gamemodelast_s "2"
player_gametypelast_m "1"
player_gametypelast_s "1"
player_last_leaderboards_filter "2" // Last mode setting in the Leaderboards screen
player_last_leaderboards_mode "0" // Last mode setting in the Leaderboards screen
player_last_leaderboards_panel "0" // Last opened panel in the Leaderboards screen
player_last_medalstats_category "3" // Last selected category on the Medals panel in the Medals & Stats screen
player_last_medalstats_panel "0" // Last opened panel in the Medals & Stats screen
player_maplast_m "0"
player_maplast_s "0"
player_medalstats_most_recent_time "1377959808.000" // Timestamp of most recently earned achievement displayed on Medals & Stats screen
player_medalstats_recent_range "432000" // Window (in seconds of recent achievements to show
player_nevershow_communityservermessage "0"
player_teamplayedlast "3"
playflush // reloading from disk in case of changes.
playgamesound // Play a sound from the game sounds txt file
playsoundscape // Forces a soundscape to play
playvideo // Plays a video: <filename> [width height]
playvideo_end_level_transition // Plays a video fullscreen without ability to skip (unless dev 1) and fades in: <filename> <time>
playvideo_exitcommand // Plays a video and fires and exit command when it is stopped or finishes: <filename> <exit command>
playvideo_exitcommand_nointerrupt // Plays a video (without interruption) and fires and exit command when it is stopped or finishes: <filename> <exit command>
playvideo_nointerrupt // Plays a video without ability to skip: <filename> [width height]
playvol // Play a sound at a specified volume.
play_distance "1" // Set to 1:2 foot or 2:10 foot presets.
play_with_friends_enabled "1"
plugin_load // plugin_load <filename> : loads a plugin
plugin_pause // plugin_pause <index> : pauses a loaded plugin
plugin_pause_all // pauses all loaded plugins
plugin_print // Prints details about loaded plugins
plugin_unload // plugin_unload <index> : unloads a plugin
plugin_unpause // plugin_unpause <index> : unpauses a disabled plugin
plugin_unpause_all // unpauses all disabled plugins
post_jump_crouch "0" // This determines how long the third person player character will crouch for after landing a jump. This only affects the third p
press_x360_button // d[own])
print_colorcorrection // Display the color correction layer information.
print_mapgroup // Prints the current mapgroup and the contained maps
print_mapgroup_sv // Prints the current mapgroup and the contained maps
progress_enable
prop_crosshair // Shows name for prop looking at
prop_debug // props will show colorcoded bounding boxes. Red means ignore all damage. White means respond phys
prop_dynamic_create // Creates a dynamic prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
prop_physics_create // Creates a physics prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
pwatchent "-1" // Entity to watch for prediction system changes.
pwatchvar "0" // Entity variable to watch in prediction system for changes.
quit // Exit the engine.
quit_prompt // Exit the engine.
radarvisdistance "1000" // at this distance and beyond you need to be point right at someone to see them
radarvismaxdot "0" // how closely you have to point at someone to see them beyond max distance
radarvismethod "1" // 1 for more realistic method
radarvispow "0" // and still see them on radar.
radio1 // Opens a radio menu
radio2 // Opens a radio menu
radio3 // Opens a radio menu
rangefinder // rangefinder
rate "80000" // Max bytes/sec the host can receive data
rcon // Issue an rcon command.
rcon_address "0" // Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)
rcon_password "0" // remote console password.
rebuy // Attempt to repurchase items with the order listed in cl_rebuy
recompute_speed // Recomputes clock speed (for debugging purposes).
record // Record a demo.
reload // Reload the most recent saved game (add setpos to jump to current view position on reload).
reload_vjobs // reload vjobs module
remote_bug // Starts a bug report with data from the currently connected rcon machine
removeallids // Remove all user IDs from the ban list.
removeid // Remove a user ID from the ban list.
removeip // Remove an IP address from the ban list.
render_blanks // render N blank frames
report_cliententitysim "0" // List all clientside simulations and time - will report and turn itself off.
report_clientthinklist "0" // List all clientside entities thinking and time - will report and turn itself off.
report_entities // Lists all entities
report_simthinklist // Lists all simulating/thinking entities
report_soundpatch // reports sound patch count
report_touchlinks // Lists all touchlinks
reset_expo // and end the round
reset_gameconvars // Reset a bunch of game convars to default values
respawn_entities // Respawn all the entities in the map.
restart // Restart the game on the same level (add setpos to jump to current view position on restart).
retry // Retry connection to last server.
rope_min_pixel_diameter "2"
rr_followup_maxdist "1800" // then ANY or then ALL response followups will be dispatched only to characters within this distance.
rr_forceconcept // fire a response concept directly at a given character. USAGE: rr_forceconcept <target> <concept> criteria1:value1,criteria2:va
rr_reloadresponsesystems // Reload all response system scripts.
rr_remarkables_enabled "1" // polling for info_remarkables and issuances of TLK_REMARK is enabled.
rr_remarkable_max_distance "1200" // AIs will not even consider remarkarbles that are more than this many units away.
rr_remarkable_world_entities_replay_limit "1" // TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable
rr_thenany_score_slop "0" // all rule-matching scores within this much of the best score will be considere
r_AirboatViewDampenDamp "1"
r_AirboatViewDampenFreq "7"
r_AirboatViewZHeight "0"
r_alphafade_usefov "1" // Account for FOV when computing an entitys distance-based alpha fade
r_ambientfraction "0" // Fraction of direct lighting used to boost lighting when model requests
r_ambientlightingonly "0" // Set this to 1 to light models with only ambient lighting (and no static lighting).
r_avglight "1"
r_avglightmap "0"
r_brush_queue_mode "0"
r_cheapwaterend
r_cheapwaterstart
r_cleardecals // Usage r_cleardecals <permanent>.
r_ClipAreaFrustums "1"
r_ClipAreaPortals "1"
r_colorstaticprops "0"
r_debugcheapwater "0"
r_debugrandomstaticlighting "0" // Set to 1 to randomize static lighting for debugging. Must restart for change to take affect.
r_depthoverlay "0" // Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output.
r_disable_distance_fade_on_big_props "0" // Completely disable distance fading on large props
r_disable_distance_fade_on_big_props_thresh "48000" // Distance prop fade disable threshold size
r_disable_update_shadow "1"
r_DispBuildable "0"
r_DispWalkable "0"
r_dlightsenable "1"
r_drawallrenderables "0" // even ones inside solid leaves.
r_DrawBeams "1" // 2=Wireframe
r_drawbrushmodels "1" // 2=Wireframe
r_drawclipbrushes "0" // purple=NPC)
r_drawdecals "1" // Render decals.
r_DrawDisp "1" // Toggles rendering of displacment maps
r_drawentities "1"
r_drawfuncdetail "1" // Render func_detail
r_drawleaf "-1" // Draw the specified leaf.
r_drawlightcache "0" // 0: off 1: draw light cache entries 2: draw rays
r_drawlightinfo "0"
r_drawlights "0"
r_DrawModelLightOrigin "0"
r_drawmodelstatsoverlay "0"
r_drawmodelstatsoverlaydistance "500"
r_drawmodelstatsoverlayfilter "-1"
r_drawmodelstatsoverlaymax "1" // time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2
r_drawmodelstatsoverlaymin "0" // time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2
r_drawopaquerenderables "1"
r_drawopaqueworld "1"
r_drawothermodels "1" // 2=Wireframe
r_drawparticles "1" // Enable/disable particle rendering
r_DrawPortals "0"
r_DrawRain "1" // Enable/disable rain rendering.
r_drawrenderboxes "0" // (0 - off) (1 - Draws the bounding box of entities) (2 - Draws the axis aligned bounding box used for culling) (3 - draws both b
r_drawropes "1"
r_drawscreenoverlay "1"
r_drawskybox "1"
r_drawsprites "1"
r_drawstaticprops "1" // 2=Wireframe
r_drawtracers "1"
r_drawtracers_firstperson "1" // Toggle visibility of first person weapon tracers
r_drawtracers_movetonotintersect "1"
r_drawtranslucentrenderables "1"
r_drawtranslucentworld "1"
r_drawunderwateroverlay "0"
r_drawvgui "1" // Enable the rendering of vgui panels
r_drawviewmodel "1"
r_drawworld "1" // Render the world.
r_dscale_basefov "90"
r_dscale_fardist "2000"
r_dscale_farscale "4"
r_dscale_neardist "100"
r_dscale_nearscale "1"
r_dynamic "1"
r_dynamiclighting "1"
r_eyegloss "1"
r_eyemove "1"
r_eyeshift_x "0"
r_eyeshift_y "0"
r_eyeshift_z "0"
r_eyesize "0"
r_eyewaterepsilon "7"
r_farz "-1" // Override the far clipping plane. -1 means to use the value in env_fog_controller.
r_flashlightambient "0"
r_flashlightbacktraceoffset "0"
r_flashlightbrightness "0"
r_flashlightclip "0"
r_flashlightconstant "0"
r_flashlightdrawclip "0"
r_flashlightfar "750"
r_flashlightfov "53"
r_flashlightladderdist "40"
r_flashlightlinear "100"
r_flashlightlockposition "0"
r_flashlightmuzzleflashfov "120"
r_flashlightnear "4"
r_flashlightnearoffsetscale "1"
r_flashlightoffsetforward "0"
r_flashlightoffsetright "5"
r_flashlightoffsetup "-5"
r_flashlightquadratic "0"
r_flashlightshadowatten "0"
r_flashlightvisualizetrace "0"
r_flushlod // Flush and reload LODs.
r_hwmorph "0"
r_itemblinkmax "0"
r_itemblinkrate "4"
r_JeepFOV "90"
r_JeepViewBlendTo "1"
r_JeepViewBlendToScale "0"
r_JeepViewBlendToTime "1"
r_JeepViewDampenDamp "1"
r_JeepViewDampenFreq "7"
r_JeepViewZHeight "10"
r_lightcachecenter "1"
r_lightcachemodel "-1"
r_lightcache_invalidate
r_lightcache_numambientsamples "162" // number of random directions to fire rays when computing ambient lighting
r_lightcache_radiusfactor "1000" // Allow lights to influence lightcaches beyond the lights radii
r_lightinterp "5" // 0 turns off interpolation
r_lightmap "-1"
r_lightstyle "-1"
r_lightwarpidentity "0"
r_lockpvs "0" // Lock the PVS so you can fly around and inspect what is being drawn.
r_mapextents "16384" // Set the max dimension for the map. This determines the far clipping plane
r_modelAmbientMin "0" // Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).
r_modelwireframedecal "0"
r_nohw "0"
r_nosw "0"
r_novis "0" // Turn off the PVS.
r_occlusionspew "0" // Activate/deactivates spew about what the occlusion system is doing.
r_oldlightselection "0" // Set this to revert to HL2s method of selecting lights
r_particle_demo "0"
r_partition_level "-1" // Displays a particular level of the spatial partition system. Use -1 to disable it.
r_portalsopenall "0" // Open all portals
r_PortalTestEnts "1" // Clip entities against portal frustums.
r_printdecalinfo
r_proplightingpooling "-1" // 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset
r_radiosity "4" // 0: no radiosity 1: radiosity with ambient cube (6 samples) 2: radiosity with 162 samples 3: 162 samples for static props, 6 sam
r_rainalpha "0"
r_rainalphapow "0"
r_RainCheck "0" // Enable/disable IsInAir() check for rain drops?
r_RainDebugDuration "0" // Shows rain tracelines for this many seconds (0 disables)
r_raindensity "0"
r_RainHack "0"
r_rainlength "0"
r_RainProfile "0" // Enable/disable rain profiling.
r_RainRadius "1500"
r_RainSideVel "130" // How much sideways velocity rain gets.
r_RainSimulate "1" // Enable/disable rain simulation.
r_rainspeed "600"
r_RainSplashPercentage "20"
r_rainwidth "0"
r_randomflex "0"
r_rimlight "1"
r_ropes_holiday_light_color // Set each lights color: [light0-3] [r0-255] [g0-255] [b0-255]
r_screenoverlay // Draw specified material as an overlay
r_shadowangles // Set shadow angles
r_shadowblobbycutoff // some shadow stuff
r_shadowcolor // Set shadow color
r_shadowdir // Set shadow direction
r_shadowdist // Set shadow distance
r_shadowfromanyworldlight "0"
r_shadowfromworldlights_debug "0"
r_shadowids "0"
r_shadows_gamecontrol "-1"
r_shadowwireframe "0"
r_shadow_debug_spew "0"
r_shadow_deferred "0" // Toggle deferred shadow rendering
r_showenvcubemap "0"
r_showz_power "1"
r_skin "0"
r_skybox "1" // Enable the rendering of sky boxes
r_slowpathwireframe "0"
r_SnowDebugBox "0" // Snow Debug Boxes.
r_SnowEnable "1" // Snow Enable
r_SnowEndAlpha "255" // Snow.
r_SnowEndSize "0" // Snow.
r_SnowFallSpeed "1" // Snow fall speed scale.
r_SnowInsideRadius "256" // Snow.
r_SnowOutsideRadius "1024" // Snow.
r_SnowParticles "500" // Snow.
r_SnowPosScale "1" // Snow.
r_SnowRayEnable "1" // Snow.
r_SnowRayLength "8192" // Snow.
r_SnowRayRadius "256" // Snow.
r_SnowSpeedScale "1" // Snow.
r_SnowStartAlpha "25" // Snow.
r_SnowStartSize "1" // Snow.
r_SnowWindScale "0" // Snow.
r_SnowZoomOffset "384" // Snow.
r_SnowZoomRadius "512" // Snow.
r_swingflashlight "1"
r_updaterefracttexture "1"
r_vehicleBrakeRate "1"
r_VehicleViewClamp "1"
r_VehicleViewDampen "1"
r_visocclusion "0" // Activate/deactivate wireframe rendering of what the occlusion system is doing.
r_visualizelighttraces "0"
r_visualizelighttracesshowfulltrace "0"
r_visualizetraces "0"
safezonex "1" // The percentage of the screen width that is considered safe from overscan
safezoney "1" // The percentage of the screen height that is considered safe from overscan
save // Saves current game.
save_finish_async
say // Display player message
say_team // Display player message to team
scandemo // Scan a recorded demo file (.dem ) for specific game events and dump data.
scene_flush // Flush all .vcds from the cache and reload from disk.
scene_playvcd // Play the given VCD as an instanced scripted scene.
scene_showfaceto "0" // show the directions of faceto events.
scene_showlook "0" // show the directions of look events.
scene_showmoveto "0" // show the end location.
scene_showunlock "0" // Show when a vcd is playing but normal AI is running.
screenshot // Take a screenshot.
script // Run the text as a script
script_client // Run the text as a script
script_debug // Connect the vscript VM to the script debugger
script_debug_client // Connect the vscript VM to the script debugger
script_dump_all // Dump the state of the VM to the console
script_dump_all_client // Dump the state of the VM to the console
script_execute // Run a vscript file
script_execute_client // Run a vscript file
script_help // optionally with a search string
script_help_client // optionally with a search string
script_reload_code // replacing existing functions with the functions in the run script
script_reload_entity_code // replacing existing functions with the functions in the run scripts
script_reload_think // replacing existing functions with the functions in the run script
sensitivity "6" // Mouse sensitivity.
servercfgfile "0"
server_game_time // Gives the game time in seconds (servers curtime)
setang // Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).
setang_exact // Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).
setinfo // Adds a new user info value
setmaster // add/remove/enable/disable master servers
setmodel // Changess players model
setpause // Set the pause state of the server.
setpos // Move player to specified origin (must have sv_cheats).
setpos_exact // Move player to an exact specified origin (must have sv_cheats).
setpos_player // Move specified player to specified origin (must have sv_cheats).
sf4_meshcache_stats // Outputs Scaleform 4 mesh cache stats
sf_ui_tint "1" // The current tint applied to the Scaleform UI
shake // Shake the screen.
shake_stop // Stops all active screen shakes.
shake_testpunch // Test a punch-style screen shake.
showbudget_texture "0" // Enable the texture budget panel.
showbudget_texture_global_dumpstats // Dump all items in +showbudget_texture_global in a text form
showconsole // Show the console.
showinfo // Shows a info panel: <type> <title> <message> [<command number>]
showpanel // Shows a viewport panel <name>
showtriggers "0" // Shows trigger brushes
showtriggers_toggle // Toggle show triggers
show_loadout_toggle // Toggles loadout display
singlestep "0" // Run engine in single step mode ( set next to 1 to advance a frame )
skill "1" // Game skill level (1-3).
skip_next_map // Skips the next map in the map rotation for the server.
sk_autoaim_mode "1"
slot0
slot1
slot10
slot11
slot2
slot3
slot4
slot5
slot6
slot7
slot8
slot9
snapto
sndplaydelay
snd_async_flush // Flush all unlocked async audio data
snd_async_showmem // Show async memory stats
snd_async_showmem_music // Show async memory stats for just non-streamed music
snd_async_showmem_summary // Show brief async memory stats
snd_deathcamera_volume "1" // Relative volume of the death camera music.
snd_debug_panlaw "0" // Visualize panning crossfade curves
snd_disable_mixer_duck "0"
snd_disable_mixer_solo "0"
snd_duckerattacktime "0"
snd_duckerreleasetime "2"
snd_duckerthreshold "0"
snd_ducking_off "1"
snd_ducktovolume "0"
snd_dumpclientsounds // Dump sounds to console
snd_dump_filepaths
snd_dvar_dist_max "1320" // Play full far sound at this distance
snd_dvar_dist_min "240" // Play full near sound at this distance
snd_filter "0"
snd_foliage_db_loss "4" // foliage dB loss per 1200 units
snd_front_headphone_position // Specifies the position (in degrees) of the virtual front left/right headphones.
snd_front_stereo_speaker_position // Specifies the position (in degrees) of the virtual front left/right speakers.
snd_front_surround_speaker_position // Specifies the position (in degrees) of the virtual front left/right speakers.
snd_gain "1"
snd_gain_max "1"
snd_gain_min "0"
snd_getmixer // Get data related to mix group matching string
snd_headphone_pan_exponent // Specifies the exponent for the pan xfade from phone to phone if the exp pan law is being used.
snd_headphone_pan_radial_weight // Apply cos(angle) * weight before pan law
snd_legacy_surround "0"
snd_list "0"
snd_mapobjective_volume "1" // Relative volume of map objective music.
snd_max_same_sounds "4"
snd_max_same_weapon_sounds "3"
snd_menumusic_volume "1" // Relative volume of the main menu music.
snd_mixahead "0"
snd_mixer_master_dsp "1"
snd_mixer_master_level "1"
snd_musicvolume "0" // Overall music volume
snd_musicvolume_multiplier_inoverlay "0" // Music volume multiplier when Steam Overlay is active
snd_music_selection "2" // Tracking rotating music for players with no music packs equipped.
snd_mute_losefocus "1"
snd_obscured_gain_dB "-2"
snd_op_test_convar "1"
snd_pause_all "1" // Specifies to pause all sounds and not just voice
snd_pitchquality "1"
snd_playsounds // Play sounds from the game sounds txt file at a given location
snd_prefetch_common "1" // Prefetch common sounds from directories specified in scripts/sound_prefetch.txt
snd_pre_gain_dist_falloff "1"
snd_print_channels // Prints all the active channel.
snd_print_channel_by_guid // Prints the content of a channel from its guid. snd_print_channel_by_guid <guid>.
snd_print_channel_by_index // Prints the content of a channel from its index. snd_print_channel_by_index <index>.
snd_print_dsp_effect // Prints the content of a dsp effect.
snd_rear_headphone_position // Specifies the position (in degrees) of the virtual rear left/right headphones.
snd_rear_speaker_scale "1" // How much to scale rear speaker contribution to front stereo output
snd_rear_stereo_speaker_position // Specifies the position (in degrees) of the virtual rear left/right speakers.
snd_rear_surround_speaker_position // Specifies the position (in degrees) of the virtual rear left/right speakers.
snd_rebuildaudiocache // rebuild audio cache for current language
snd_refdb "60" // Reference dB at snd_refdist
snd_refdist "36" // Reference distance for snd_refdb
snd_report_format_sound "0" // report all sound formats.
snd_report_loop_sound "0" // report all sounds that just looped.
snd_report_start_sound "0" // report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example
snd_report_stop_sound "0" // report all sounds stopped with S_StopSound().
snd_report_verbose_error "0" // report more error found when playing sounds.
snd_restart // Restart sound system.
snd_roundend_volume "1" // Relative volume of round end music.
snd_roundstart_volume "1" // Relative volume of round start music.
snd_setmixer // solo.
snd_setmixlayer // solo.
snd_setmixlayer_amount // Set named mix layer mix amount.
snd_setsoundparam // Set a sound paramater
snd_set_master_volume // Sets the master volume for a channel. snd_set_master_volume <guid> <mastervolume>.
snd_show "0" // Show sounds info
snd_showclassname "0"
snd_showmixer "0"
snd_showstart "0"
snd_sos_flush_operators // Flush and re-parse the sound operator system
snd_sos_list_operator_updates "0"
snd_sos_print_operators // Prints a list of currently available operators
snd_sos_show_block_debug "0" // Spew data about the list of block entries.
snd_sos_show_client_rcv "0"
snd_sos_show_client_xmit "0"
snd_sos_show_operator_entry_filter "0"
snd_sos_show_operator_init "0"
snd_sos_show_operator_parse "0"
snd_sos_show_operator_prestart "0"
snd_sos_show_operator_shutdown "0"
snd_sos_show_operator_start "0"
snd_sos_show_operator_stop_entry "0"
snd_sos_show_operator_updates "0"
snd_sos_show_queuetotrack "0"
snd_sos_show_server_xmit "0"
snd_sos_show_startqueue "0"
snd_soundmixer_flush // Reload soundmixers.txt file.
snd_soundmixer_list_mixers // List all mixers to dev console.
snd_soundmixer_list_mix_groups // List all mix groups to dev console.
snd_soundmixer_list_mix_layers // List all mix layers to dev console.
snd_soundmixer_set_trigger_factor // trigger amount.
snd_stereo_speaker_pan_exponent // Specifies the exponent for the pan xfade from speaker to speaker if the exp pan law is being used.
snd_stereo_speaker_pan_radial_weight // Apply cos(angle) * weight before pan law
snd_surround_speaker_pan_exponent // Specifies the exponent for the pan xfade from speaker to speaker if the exp pan law is being used.
snd_surround_speaker_pan_radial_weight // Apply cos(angle) * weight before pan law
snd_tensecondwarning_volume "1" // Relative volume of ten second warning music.
snd_updateaudiocache // checks _master.cache based on file sizes and rebuilds any change/new entries
snd_visualize "0" // Show sounds location in world
snd_writemanifest // outputs the precache manifest for the current level
soundfade // Fade client volume.
soundinfo // Describe the current sound device.
soundlist // List all known sounds.
soundscape_debug "0" // red lines show soundscapes that ar
soundscape_dumpclient // Dumps the clients soundscape data.
soundscape_fadetime "3" // Time to crossfade sound effects between soundscapes
soundscape_flush // Flushes the server & client side soundscapes
soundscape_radius_debug "0" // Prints current volume of radius sounds
speak // Play a constructed sentence.
spec_allow_roaming "0" // allow free-roaming spectator camera.
spec_freeze_cinematiclight_b "1"
spec_freeze_cinematiclight_g "1"
spec_freeze_cinematiclight_r "1"
spec_freeze_cinematiclight_scale "2"
spec_freeze_deathanim_time "0" // The time that the death cam will spend watching the players ragdoll before going into the freeze death cam.
spec_freeze_distance_max "80" // Maximum random distance from the target to stop when framing them in observer freeze cam.
spec_freeze_distance_min "60" // Minimum random distance from the target to stop when framing them in observer freeze cam.
spec_freeze_panel_extended_time "0" // Time spent with the freeze panel still up after observer freeze cam is done.
spec_freeze_target_fov "42" // The target FOV that the deathcam should use.
spec_freeze_target_fov_long "90" // The target FOV that the deathcam should use when the cam zoom far away on the target.
spec_freeze_time "5" // Time spend frozen in observer freeze cam.
spec_freeze_time_lock "2" // Time players are prevented from skipping the freeze cam
spec_freeze_traveltime "0" // Time taken to zoom in to frame a target in observer freeze cam.
spec_freeze_traveltime_long "0" // Time taken to zoom in to frame a target in observer freeze cam when they are far away.
spec_goto // Move spectator to specified origin and eyes to specified pitch yaw.
spec_gui // Shows or hides the spectator bar
spec_hide_players "0" // Toggle the visibility of scoreboard players.
spec_lerpto // Lerp the spectator camera to specified origin and eyes to specified pitch yaw.
spec_menu // Activates spectator menu
spec_mode // Set spectator mode
spec_next // Spectate next player
spec_player // Spectate player by index
spec_player_by_name // Spectate player by name
spec_pos // dump position and angles to the console
spec_prev // Spectate previous player ( valid values are 3 to 6 )
spec_show_xray "1" // you can see player outlines and name IDs through walls - who you can see depends on your team and mode
spec_usenumberkeys_nobinds "1" // etc).
spike // generates a fake spike
spincycle // Cause the engine to spincycle (Debug!!)
ss_enable "0" // Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT
ss_map // Start playing on specified map with max allowed splitscreen players.
ss_reloadletterbox // ss_reloadletterbox
ss_splitmode "0" // 2 - vertical (only allowed in widescr
startdemos // Play demos in demo sequence.
startmovie // Start recording movie frames.
startupmenu // and were not in developer
star_memory // Dump memory stats
stats // Prints server performance variables
status // Display map and connection status.
stop // Finish recording demo.
stopdemo // Stop playing back a demo.
stopsound
stopsoundscape // Stops all soundscape processing and fades current looping sounds
stopvideos // Stops all videos playing to the screen
stopvideos_fadeout // Fades out all videos playing to the screen: <time>
stop_transition_videos_fadeout // Fades out all transition videos playing to the screen: <time>
stringtabledictionary // Create dictionary for current strings.
stuffcmds // Parses and stuffs command line + commands to command buffer.
suitvolume "0"
surfaceprop // Reports the surface properties at the cursor
sv_accelerate "5" // Linear acceleration amount (old value is 5.6)
sv_accelerate_debug_speed "0"
sv_accelerate_use_weapon_speed "1"
sv_airaccelerate "12"
sv_allowdownload "1" // Allow clients to download files
sv_allowupload "1" // Allow clients to upload customizations files
sv_allow_thirdperson "0" // all clients can set t
sv_allow_votes "1" // Allow voting?
sv_allow_wait_command "1" // Allow or disallow the wait command on clients connected to this server.
sv_alltalk "0" // chat)
sv_alternateticks "0" // server only simulates entities on even numbered ticks.
sv_arms_race_vote_to_restart_disallowed_after "0" // Arms Race gun level after which vote to restart is disallowed
sv_auto_full_alltalk_during_warmup_half_end "1" // at halftime and at the end of the match
sv_benchmark_force_start // Force start the benchmark. This is only for debugging. Its better to set sv_benchmark to 1 and restart the level.
sv_bounce "0" // Bounce multiplier for when physically simulated objects collide with other objects.
sv_broadcast_ugc_downloads "0"
sv_broadcast_ugc_download_progress_interval "8"
sv_cheats "0" // Allow cheats on server
sv_clearhinthistory // Clear memory of server side hints displayed to the player.
sv_client_cmdrate_difference "20" // cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate an
sv_clockcorrection_msecs "30" // The server tries to keep each players m_nTickBase withing this many msecs of the server absolute tickcount
sv_coaching_enabled "0" // Allows spectating and communicating with a team ( coach t or coach ct )
sv_competitive_minspec "1" // Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.
sv_competitive_official_5v5 "0" // Enable to force the server to show 5v5 scoreboards and allows spectators to see characters through walls.
sv_consistency "0" // Whether the server enforces file consistency for critical files
sv_contact "0" // Contact email for server sysop
sv_cs_dump_econ_item_stringtable // sv_cs_dump_econ_item_stringtable
sv_damage_print_enable "1" // Turn this off to disable the players damage feed in the console after getting killed.
sv_dc_friends_reqd "0" // Set this to 0 to allow direct connects to a game in progress even if no presents are present
sv_deadtalk "0" // text) to the living
sv_debugmanualmode "0" // Make sure entities correctly report whether or not their network data has changed.
sv_debug_ugc_downloads "0"
sv_disable_observer_interpolation "0" // Disallow interpolating between observer targets on this server.
sv_downloadurl "0" // Location from which clients can download missing files
sv_dumpstringtables "0"
sv_dump_entity_pack_stats // Show stats on entity packing.
sv_dump_serialized_entities_mem // Dump serialized entity allocations stats.
sv_enable_delta_packing "0" // b
sv_footstep_sound_frequency "0" // How frequent to hear the players step sound or how fast they appear to be running from first person.
sv_forcepreload "1" // Force server side preloading.
sv_force_transmit_players "1" // Will transmit players to all clients regardless of PVS checks.
sv_friction "5" // World friction.
sv_full_alltalk "0" // Any player (including Spectator team) can speak to any other player
sv_gameinstructor_disable "0" // Force all clients to disable their game instructors.
sv_game_mode_convars // Display the values of the convars for the current game_mode.
sv_gravity "800" // World gravity.
sv_grenade_trajectory "0" // Shows grenade trajectory visualization in-game.
sv_grenade_trajectory_dash "0" // Dot-dash style grenade trajectory arc
sv_grenade_trajectory_thickness "0" // Visible thickness of grenade trajectory arc
sv_grenade_trajectory_time "20" // Length of time grenade trajectory remains visible.
sv_grenade_trajectory_time_spectator "4" // Length of time grenade trajectory remains visible as a spectator.
sv_hibernate_ms "20" // # of milliseconds to sleep per frame while hibernating
sv_hibernate_ms_vgui "20" // # of milliseconds to sleep per frame while hibernating but running the vgui dedicated server frontend
sv_hibernate_postgame_delay "5" // # of seconds to wait after final client leaves before hibernating.
sv_hibernate_punt_tv_clients "0" // When enabled will punt all GOTV clients during hibernation
sv_hibernate_when_empty "1" // Puts the server into extremely low CPU usage mode when no clients connected
sv_holiday_mode "0" // 2 = Winter
sv_ignoregrenaderadio "0" // Turn off Fire in the hole messages
sv_infinite_ammo "0" // Players active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the
sv_kick_ban_duration "15" // How long should a kick ban from the server should last (in minutes)
sv_kick_players_with_cooldown "1" // (0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any
sv_lagcompensateself "0" // Player can lag compensate themselves.
sv_lagcompensationforcerestore "1" // just do it.
sv_lan "0" // no non-class C addresses )
sv_logbans "0" // Log server bans in the server logs.
sv_logblocks "0" // If true when log when a query is blocked (can cause very large log files)
sv_logecho "1" // Echo log information to the console.
sv_logfile "1" // Log server information in the log file.
sv_logflush "0" // Flush the log file to disk on each write (slow).
sv_logsdir "0" // Folder in the game directory where server logs will be stored.
sv_log_onefile "0" // Log server information to only one file.
sv_matchend_drops_enabled "1" // but drops at the end of the match can be prevented
sv_matchpause_auto_5v5 "0" // When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team.
sv_maxrate "0" // 0 == unlimited
sv_maxspeed "320"
sv_maxuptimelimit "0" // the server will exit.
sv_maxusrcmdprocessticks "16" // 0 to allow no restrictions
sv_maxusrcmdprocessticks_warning "-1" // negat
sv_maxvelocity "3500" // Maximum speed any ballistically moving object is allowed to attain per axis.
sv_max_allowed_net_graph "1" // Determines max allowed net_graph value for clients.
sv_max_queries_sec "3" // Maximum queries per second to respond to from a single IP address.
sv_max_queries_sec_global "500" // Maximum queries per second to respond to from anywhere.
sv_max_queries_tracked_ips_max "50000" // Window over which to average queries per second averages.
sv_max_queries_tracked_ips_prune "10" // Window over which to average queries per second averages.
sv_max_queries_window "10" // Window over which to average queries per second averages.
sv_memlimit "0" // the server will exit.
sv_mincmdrate "10" // This sets the minimum value for cl_cmdrate. 0 == unlimited.
sv_minrate "5000" // 0 == unlimited
sv_minupdaterate "10" // Minimum updates per second that the server will allow
sv_minuptimelimit "0" // the server will continue running regardle
sv_noclipaccelerate "5"
sv_noclipduringpause "0" // etc.).
sv_noclipspeed "5"
sv_parallel_packentities "1"
sv_parallel_sendsnapshot "1"
sv_party_mode "0" // Party!!
sv_password "0" // Server password for entry into multiplayer games
sv_pausable "0" // Is the server pausable.
sv_precacheinfo // Show precache info.
sv_pure // Show user data.
sv_pure_checkvpk // CheckPureServerVPKFiles
sv_pure_consensus "100000000.000" // Minimum number of file hashes to agree to form a consensus.
sv_pure_finduserfiles // ListPureServerFiles
sv_pure_kick_clients "1" // it will issue a warning to the client.
sv_pure_listfiles // ListPureServerFiles
sv_pure_listuserfiles // ListPureServerFiles
sv_pure_retiretime "900" // Seconds of server idle time to flush the sv_pure file hash cache.
sv_pure_trace "0" // the server will print a message whenever a client is verifying a CRC for a file.
sv_pushaway_hostage_force "20000" // How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).
sv_pushaway_max_hostage_force "1000" // Maximum of how hard the hostage is pushed away from physics objects.
sv_pvsskipanimation "1" // Skips SetupBones when npcs are outside the PVS
sv_querycache_stats // Display status of the query cache (client only)
sv_quota_stringcmdspersecond "128" // 0 to disallow all string commands
sv_rcon_whitelist_address "0" // e.g. 127.0.0.1
sv_regeneration_force_on "0" // Cheat to test regenerative health systems
sv_region "-1" // The region of the world to report this server in.
sv_remove_old_ugc_downloads "1"
sv_reservation_tickrate_adjustment "0" // Adjust server tickrate upon reservation
sv_reservation_timeout "45" // Time in seconds before lobby reservation expires.
sv_search_key "0" // restrict search to only dedicated servers having the same sv_search_key.
sv_search_team_key "0" // set this key to match with known opponents team
sv_server_graphic1 "0" // A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators.
sv_server_graphic2 "0" // A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators.
sv_showbullethits "0"
sv_showimpacts "0" // 3=server-only)
sv_showimpacts_penetration "0" // Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)
sv_showimpacts_time "4" // Duration bullet impact indicators remain before disappearing
sv_showlagcompensation "0" // Show lag compensated hitboxes whenever a player is lag compensated.
sv_showtags // Describe current gametags.
sv_show_cull_props "0" // Print out props that are being culled/added by recipent proxies.
sv_shutdown // Sets the server to shutdown when all games have completed
sv_skyname "0" // Current name of the skybox texture
sv_soundemitter_reload // Flushes the sounds.txt system
sv_soundscape_printdebuginfo // print soundscapes
sv_spawn_afk_bomb_drop_time "15" // Players that have never moved since they spawned will drop the bomb after this amount of time.
sv_specaccelerate "5"
sv_specnoclip "1"
sv_specspeed "3"
sv_spec_hear "1" // Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team
sv_staminajumpcost "0" // Stamina penalty for jumping
sv_staminalandcost "0" // Stamina penalty for landing
sv_staminamax "80" // Maximum stamina penalty
sv_staminarecoveryrate "60" // Rate at which stamina recovers (units/sec)
sv_steamgroup "0" // The ID of the steam group that this server belongs to. You can find your groups ID on the admin profile page in the steam comm
sv_steamgroup_exclusive "0" // public people will be able to join the ser
sv_stopspeed "80" // Minimum stopping speed when on ground.
sv_stressbots "0" // the server calculates data and fills packets to bots. Used for perf testing.
sv_tags "0" // Server tags. Used to provide extra information to clients when theyre browsing for servers. Separate tags with a comma.
sv_ugc_manager_max_new_file_check_interval_secs "1000"
sv_unlockedchapters "1" // Highest unlocked game chapter.
sv_validate_edict_change_infos "0" // Verify that edict changeinfos are being calculated properly (used to debug local network backdoor mode).
sv_visiblemaxplayers "-1" // Overrides the max players reported to prospective clients
sv_voiceenable "1"
sv_vote_allow_in_warmup "0" // Allow voting during warmup?
sv_vote_allow_spectators "0" // Allow spectators to vote?
sv_vote_command_delay "2" // How long after a vote passes until the action happens
sv_vote_creation_timer "120" // How often someone can individually call a vote.
sv_vote_failure_timer "300" // A vote that fails cannot be re-submitted for this long
sv_vote_issue_kick_allowed "1" // Can people hold votes to kick players from the server?
sv_vote_issue_loadbackup_allowed "1" // Can people hold votes to load match from backup?
sv_vote_kick_ban_duration "15" // How long should a kick vote ban someone from the server? (in minutes)
sv_vote_quorum_ratio "0" // The minimum ratio of players needed to vote on an issue to resolve it.
sv_vote_timer_duration "15" // How long to allow voting on an issue
sv_workshop_allow_other_maps "1" // users can play other workshop map on this server when it is empty and then mapcycle into th
sys_antialiasing "1" // Convar used exclusively by the options screen to set anti aliasing levels. Changing this convar manually will have no effect.
sys_aspectratio "-1" // Convar used exclusively by the options screen to set aspect ratio. Changing this convar manually will have no effect.
sys_minidumpspewlines "500" // Lines of crash dump console spew to keep.
sys_refldetail "0" // Convar used exclusively by the options screen to set water reflection levels. Changing this convar manually will have no effect
sys_sound_quality "-1" // Convar used exclusively by the options screen to set sound quality. Changing this convar manually will have no effect.
teammenu // Show team selection window
testhudanim // Test a hud element animation. Arguments: <anim name>
Test_CreateEntity
test_dispatcheffect // Test a clientside dispatch effect. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale> Defau
Test_EHandle
test_entity_blocker // Test command that drops an entity blocker out in front of the player.
test_freezeframe // Test the freeze frame code.
Test_InitRandomEntitySpawner
Test_Loop // Test_Loop <loop name> - loop back to the specified loop start point unconditionally.
Test_LoopCount // Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.
Test_LoopForNumSeconds // Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.
test_outtro_stats
Test_ProxyToggle_EnableProxy
Test_ProxyToggle_EnsureValue // Test_ProxyToggle_EnsureValue
Test_ProxyToggle_SetValue
Test_RandomChance // 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percenta
Test_RandomizeInPVS
Test_RandomPlayerPosition
Test_RemoveAllRandomEntities
Test_RunFrame
Test_SendKey
Test_SpawnRandomEntities
Test_StartLoop // Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.
Test_StartScript // Start a test script running..
Test_Wait
Test_WaitForCheckPoint
texture_budget_background_alpha "128" // how translucent the budget panel is
texture_budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
texture_budget_panel_height "284" // height in pixels of the budget panel
texture_budget_panel_width "512" // width in pixels of the budget panel
texture_budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
texture_budget_panel_y "450" // number of pixels from the top side of the game screen to draw the budget panel
think_limit "10" // warning is printed if this is exceeded.
thirdperson // Switch to thirdperson camera.
thirdperson_mayamode // Switch to thirdperson Maya-like camera controls.
threadpool_cycle_reserve // Cycles threadpool reservation by powers of 2
threadpool_run_tests
thread_test_tslist
thread_test_tsqueue
timedemo // Play a demo and report performance info.
timedemoquit // and then exit
timedemo_vprofrecord // Play a demo and report performance info. Also record vprof data for the span of the demo
timeleft // prints the time remaining in the match
timerefresh // Profile the renderer.
toggle // or cycles through a set of values.
toggleconsole // Show/hide the console.
toggleLmapPath // toggleLmapPath
togglescores // Toggles score panel
toggleShadowPath // Toggles CSM generation method
toggleUnlitPath // toggleUnlitPath
toggleVtxLitPath // toggleVtxLitPath
toolload // Load a tool.
toolunload // Unload a tool.
tv_advertise_watchable "0" // clients watching via UI will not need to type password
tv_allow_camera_man "1" // Auto director allows spectators to become camera man
tv_allow_static_shots "1" // Auto director uses fixed level cameras for shots
tv_autorecord "0" // Automatically records all games as GOTV demos.
tv_autoretry "1" // Relay proxies retry connection after network timeout
tv_chatgroupsize "0" // Set the default chat group size
tv_chattimelimit "8" // Limits spectators to chat only every n seconds
tv_clients // Shows list of connected GOTV clients.
tv_debug "0" // GOTV debug info.
tv_delay "10" // GOTV broadcast delay in seconds
tv_delaymapchange "1" // Delays map change until broadcast is complete
tv_deltacache "2" // Enable delta entity bit stream cache
tv_dispatchmode "1" // 2=always
tv_dispatchweight "1" // 1.25 will prefer for every 4 local clients to put 5 clients on every connected
tv_enable "0" // Activates GOTV on server (0=off;1=on;2=on when reserved)
tv_encryptdata_key "0" // When set to a valid key communication messages will be encrypted for GOTV
tv_encryptdata_key_pub "0" // When set to a valid key public communication messages will be encrypted for GOTV
tv_maxclients "128" // Maximum client number on GOTV server.
tv_maxclients_relayreserved "0" // Reserves a certain number of GOTV client slots for relays.
tv_maxrate "128000" // 0 == unlimited
tv_msg // Send a screen message to all clients.
tv_name "0" // GOTV host name
tv_nochat "0" // Dont receive chat messages from other GOTV spectators
tv_overridemaster "0" // Overrides the GOTV master root address.
tv_password "0" // GOTV password for all clients
tv_port "27020" // Host GOTV port
tv_record // Starts GOTV demo recording.
tv_relay // Connect to GOTV server and relay broadcast.
tv_relaypassword "0" // GOTV password for relay proxies
tv_relayradio "0" // 1=on
tv_relaytextchat "1" // 2=say+say_team
tv_relayvoice "1" // 1=on
tv_retry // Reconnects the GOTV relay proxy.
tv_snapshotrate "16" // Snapshots broadcasted per second
tv_status // Show GOTV server status.
tv_stop // Stops the GOTV broadcast.
tv_stoprecord // Stops GOTV demo recording.
tv_timeout "30" // GOTV connection timeout in seconds.
tv_time_remaining // Print remaining tv broadcast time
tv_title "0" // Set title for GOTV spectator UI
tv_transmitall "1" // Transmit all entities (not only director view)
tweak_ammo_impulses // Allow real-time tweaking of the ammo impulse values.
ui_posedebug_fade_in_time "0" // Time during which a new pose activity layer is shown in green in +posedebug UI
ui_posedebug_fade_out_time "0" // Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI
ui_reloadscheme // Reloads the resource files for the active UI window
ui_steam_overlay_notification_position "0" // Steam overlay notification position
ui_workshop_games_expire_minutes "3"
unbind // Unbind a key.
unbindall // Unbind all keys.
unbindalljoystick // Unbind all joystick keys.
unbindallmousekeyboard // Unbind all mouse / keyboard keys.
unload_all_addons // Reloads the search paths for game addons.
unpause // Unpause the game.
update_addon_paths // Reloads the search paths for game addons.
use // Use a particular weapon Arguments: <weapon_name>
user // Show user data.
users // Show user info for players on server.
vcollide_wireframe "0" // Render physics collision models in wireframe
vehicle_flushscript // Flush and reload all vehicle scripts
version // Print version info string.
vgui_drawtree "0" // Draws the vgui panel hiearchy to the specified depth level.
vgui_drawtree_clear
vgui_dump_panels // vgui_dump_panels [visible]
vgui_message_dialog_modal "1"
vgui_spew_fonts
vgui_togglepanel // show/hide vgui panel by name.
viewanim_addkeyframe
viewanim_create // viewanim_create
viewanim_load // load animation from file
viewanim_reset // reset view angles!
viewanim_save // Save current animation to file
viewanim_test // test view animation
viewmodel_fov "60"
viewmodel_offset_x "1"
viewmodel_offset_y "1"
viewmodel_offset_z "-1"
viewmodel_presetpos "1" // 3:Classic
view_punch_decay "18" // Decay factor exponent for view punch
view_recoil_tracking "0" // How closely the view tracks with the aim punch from weapon recoil
vismon_poll_frequency "0"
vismon_trace_limit "12"
vis_force "0"
vm_debug "0"
vm_draw_always "0" // 2 - Never draw view models. Should be done before map launches.
voicerecord_toggle
voice_caster_enable "0" // account number of caster to enable.
voice_caster_scale "1"
voice_enable "1" // Toggle voice transmit and receive.
voice_forcemicrecord "1"
voice_inputfromfile "0" // Get voice input from voice_input.wav rather than from the microphone.
voice_loopback "0"
voice_mixer_boost "0"
voice_mixer_mute "0"
voice_mixer_volume "1"
voice_modenable "1" // Enable/disable voice in this mod.
voice_mute // Mute a specific Steam user
voice_player_speaking_delay_threshold "0"
voice_recordtofile "0" // Record mic data and decompressed voice data into voice_micdata.wav and voice_decompressed.wav
voice_reset_mutelist // Reset all mute information for all players who were ever muted.
voice_scale "1"
voice_show_mute // Show whether current players are muted.
voice_system_enable "1" // Toggle voice system.
voice_threshold "2000"
voice_unmute // or `all` to unmute all connected players.
volume "0" // Sound volume
voxeltree_box // Vector(max)>.
voxeltree_playerview // View entities in the voxel-tree at the player position.
voxeltree_sphere // float(radius)>.
voxeltree_view // View entities in the voxel-tree.
vox_reload // Reload sentences.txt file
vphys_sleep_timeout // set sleep timeout: large values mean stuff wont ever sleep
vprof // Toggle VProf profiler
vprof_adddebuggroup1 // add a new budget group dynamically for debugging
vprof_cachemiss // Toggle VProf cache miss checking
vprof_cachemiss_off // Turn off VProf cache miss checking
vprof_cachemiss_on // Turn on VProf cache miss checking
vprof_child
vprof_collapse_all // Collapse the whole vprof tree
vprof_dump_counters // Dump vprof counters to the console
vprof_dump_groupnames // Write the names of all of the vprof groups to the console.
vprof_expand_all // Expand the whole vprof tree
vprof_expand_group // Expand a budget group in the vprof tree by name
vprof_generate_report // Generate a report to the console.
vprof_generate_report_AI // Generate a report to the console.
vprof_generate_report_AI_only // Generate a report to the console.
vprof_generate_report_budget // Generate a report to the console based on budget group.
vprof_generate_report_hierarchy // Generate a report to the console.
vprof_generate_report_hierarchy_per_frame_and_count_only // Generate a minimal hiearchical report to the console.
vprof_generate_report_map_load // Generate a report to the console.
vprof_graphheight "256"
vprof_graphwidth "512"
vprof_nextsibling
vprof_off // Turn off VProf profiler
vprof_on // Turn on VProf profiler
vprof_parent
vprof_playback_average // Average the next N frames.
vprof_playback_start // Start playing back a recorded .vprof file.
vprof_playback_step // step to the next tick.
vprof_playback_stepback // step to the previous tick.
vprof_playback_stop // Stop playing back a recorded .vprof file.
vprof_prevsibling
vprof_record_start // Start recording vprof data for playback later.
vprof_record_stop // Stop recording vprof data
vprof_remote_start // Request a VProf data stream from the remote server (requires authentication)
vprof_remote_stop // Stop an existing remote VProf data request
vprof_reset // Reset the stats in VProf profiler
vprof_reset_peaks // Reset just the peak time in VProf profiler
vprof_to_csv // Convert a recorded .vprof file to .csv.
vprof_unaccounted_limit "0" // number of milliseconds that a node must exceed to turn red in the vprof panel
vprof_verbose "1" // Set to one to show average and peak times
vprof_vtune_group // enable vtune for a particular vprof group (disable to disable)
vprof_warningmsec "10" // Above this many milliseconds render the label red to indicate slow code.
vtune // Controls VTunes sampling.
vx_model_list // Dump models to VXConsole
wc_air_edit_further // moves position of air node crosshair and placement location further away from play
wc_air_edit_nearer // moves position of air node crosshair and placement location nearer to from player
wc_air_node_edit // toggles laying down or air nodes instead of ground nodes
wc_create // creates a node where the player is looking if a node is allowed at that location for the currently select
wc_destroy // destroys the node that the player is nearest to looking at. (The node will be highlighted by a red box).
wc_destroy_undo // When in WC edit mode restores the last deleted node
wc_link_edit
weapon_accuracy_nospread "0" // Disable weapon inaccuracy spread
weapon_debug_spread_gap "0"
weapon_debug_spread_show "0" // 3: show accuracy with dynamic crosshair
weapon_recoil_cooldown "0" // Amount of time needed between shots before restarting recoil
weapon_recoil_decay1_exp "3" // Decay factor exponent for weapon recoil
weapon_recoil_decay2_exp "8" // Decay factor exponent for weapon recoil
weapon_recoil_decay2_lin "18" // Decay factor (linear term) for weapon recoil
weapon_recoil_scale "2" // Overall scale factor for recoil. Used to reduce recoil on specific platforms
weapon_recoil_scale_motion_controller "1" // Overall scale factor for recoil. Used to reduce recoil. Only for motion controllers
weapon_recoil_suppression_factor "0" // lerping to 1 for later shots
weapon_recoil_suppression_shots "4" // Number of shots before weapon uses full recoil
weapon_recoil_variance "0" // Amount of variance per recoil impulse
weapon_recoil_vel_decay "4" // Decay factor for weapon recoil velocity
weapon_recoil_view_punch_extra "0" // Additional (non-aim) punch added to view from recoil
weapon_reload_database // Reload the weapon database
weapon_reticle_knife_show "0" // When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife.
whitelistcmd // Runs a whitelisted command.
windows_speaker_config "4"
wipe_nav_attributes // Clear all nav attributes of selected area.
workshop_publish // Bring up the Workshop Publish dialog.
workshop_start_map // Sets the first map to load once a workshop collection been hosted. Takes the file id of desired start map as a parameter.
workshop_workbench // Bring up the Workshop workbench dialog.
writeid // Writes a list of permanently-banned user IDs to banned_user.cfg.
writeip // Save the ban list to banned_ip.cfg.
xbox_autothrottle "1"
xbox_throttlebias "100"
xbox_throttlespoof "200"
xload // Load a saved game from a console storage device.
xlook
xmove
xsave // Saves current game to a console storage device.
zoom_sensitivity_ratio_joystick "1" // Additional controller sensitivity scale factor applied when FOV is zoomed in.
zoom_sensitivity_ratio_mouse "1" // Additional mouse sensitivity scale factor applied when FOV is zoomed in.
_autosave // Autosave
_autosavedangerous // AutoSaveDangerous
_bugreporter_restart // Restarts bug reporter .dll
_record // Record a demo incrementally.
_resetgamestats // Erases current game stats and writes out a blank stats file
_restart // Shutdown and restart the engine.
